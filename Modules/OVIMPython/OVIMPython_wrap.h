/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.20
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_OVIMPython_WRAP_H_
#define SWIG_OVIMPython_WRAP_H_

class Swig::Director;


class SwigDirector_OVKeyCode : public OVKeyCode, public Swig::Director {

public:
    SwigDirector_OVKeyCode(PyObject* self, bool disown = false);
    virtual int isCapslock();
    virtual int isFunctionKey();
    virtual int isCommand();
    virtual int code();
    virtual int isCtrl();
    virtual int isNum();
    virtual int isShift();
    virtual int isAlt();
    virtual int isOpt();
};


class SwigDirector_OVBuffer : public OVBuffer, public Swig::Director {

public:
    SwigDirector_OVBuffer(PyObject* self, bool disown = false);
    virtual OVBuffer *append(char const *s);
    virtual int isEmpty();
    virtual OVBuffer *clear();
    virtual OVBuffer *send();
    virtual OVBuffer *update();
    virtual OVBuffer *update(int cursorPos, int markFrom = -1, int markTo = -1);
};


class SwigDirector_OVCandidate : public OVCandidate, public Swig::Director {

public:
    SwigDirector_OVCandidate(PyObject* self, bool disown = false);
    virtual OVCandidate *append(char const *s);
    virtual OVCandidate *clear();
    virtual OVCandidate *hide();
    virtual OVCandidate *show();
    virtual OVCandidate *update();
    virtual int onScreen();
};


class SwigDirector_OVDictionary : public OVDictionary, public Swig::Director {

public:
    SwigDirector_OVDictionary(PyObject* self, bool disown = false);
    virtual char const *getString(char const *key);
    virtual char const *setString(char const *key, char const *value);
    virtual int setInteger(char const *key, int value);
    virtual int getIntegerWithDefault(char const *key, int value);
    virtual char const *getStringWithDefault(char const *key, char const *value);
    virtual int keyExist(char const *key);
    virtual int getInteger(char const *key);
};


class SwigDirector_OVService : public OVService, public Swig::Director {

public:
    SwigDirector_OVService(PyObject* self, bool disown = false);
    virtual char const *userSpacePath(char const *modid);
    virtual char const *toUTF8(char const *encoding, char const *src);
    virtual char const *fromUTF8(char const *encoding, char const *src);
    virtual int UTF8ToUTF16(char const *src, unsigned short **rcvr);
    virtual char const *locale();
    virtual char const *pathSeparator();
    virtual void beep();
    virtual void notify(char const *msg);
    virtual char const *UTF16ToUTF8(unsigned short *src, int len);
};


class SwigDirector_OVInputMethodContext : public OVInputMethodContext, public Swig::Director {

public:
    SwigDirector_OVInputMethodContext(PyObject* self, bool disown = false);
    virtual void clear();
    virtual void end();
    virtual int keyEvent(OVKeyCode *arg0, OVBuffer *arg1, OVCandidate *arg2, OVService *arg3);
    virtual void start(OVBuffer *arg0, OVCandidate *arg1, OVService *arg2);
};


class SwigDirector_OVModule : public OVModule, public Swig::Director {

public:
    SwigDirector_OVModule(PyObject* self, bool disown = false);
    virtual char const *localizedName(char const *locale);
    virtual int initialize(OVDictionary *moduleCfg, OVService *srv, char const *modulePath);
    virtual char const *moduleType();
    virtual char const *identifier();
    virtual void update(OVDictionary *moduleCfg, OVService *srv);
};


class SwigDirector_OVInputMethod : public OVInputMethod, public Swig::Director {

public:
    SwigDirector_OVInputMethod(PyObject* self, bool disown = false);
    virtual char const *localizedName(char const *locale);
    virtual int initialize(OVDictionary *moduleCfg, OVService *srv, char const *modulePath);
    virtual char const *moduleType();
    virtual char const *identifier();
    virtual OVInputMethodContext *newContext();
    virtual void update(OVDictionary *moduleCfg, OVService *srv);
};


class SwigDirector_OVOutputFilter : public OVOutputFilter, public Swig::Director {

public:
    SwigDirector_OVOutputFilter(PyObject* self, bool disown = false);
    virtual char const *localizedName(char const *locale);
    virtual int initialize(OVDictionary *moduleCfg, OVService *srv, char const *modulePath);
    virtual char const *process(char const *source, OVService *srv);
    virtual char const *moduleType();
    virtual char const *identifier();
    virtual void update(OVDictionary *moduleCfg, OVService *srv);
};


#endif
