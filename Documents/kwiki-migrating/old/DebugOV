以下說明用gdb debug !OpenVanilla的方法。
要特別注意，用gdb debug前，必須在編譯時加上-g的flag。

* 先啟動一個Application，這裡用!TextEdit為例
* 用ps和grep找出該!App的PID
 $ ps aux | grep TextEdit
 vgod      1994   0.0  2.8   647740  14800  ??  S     3:28PM   0:00.47
 /Applications/TextEdit.app/Contents/MacOS/TextEdit -psn_0_2005
* 接下來啟動gdb, attach上剛才開的App。
 $ gdb /Applications/TextEdit.app/Contents/MacOS/TextEdit 1994
* 在你想要的function上設breakpoint
 (gdb) b OVIMArrayContext::keyEvent
 Breakpoint 1 at 0x9423cd10
** 要是剛剛還沒在 TextEdit 上把 OV 開起來，會看到如下訊息，選 y 吧：
 Function "OVIMArrayContext::keyEvent" not defined.
 Make breakpoint pending on future shared library load? (y or [n]) y
* 用continue繼續執行原本的程式，開始像平常一樣使用OV，等到break後就可以回到gdb來trace。
 (gdb) c
 Continuing.
* 在 break 時想執行下一行，且碰到 function call 也要進去裡面逐一執行 (step in)：
 (gdb) s
* 在 break 時想執行下一行，若碰到 function call 就讓它執行完傳回結果 (step over)：
 (gdb) n
* 想看看變數的狀況時
 (gdb) p
 
