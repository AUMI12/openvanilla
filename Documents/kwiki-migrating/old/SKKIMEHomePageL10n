==== 開発の状況 ====

==== 開發狀況 ====

skkiserv を全面的に書き換えました。また dialog の設定部分を一新しました。

把skkiserv全面的重寫了. 另外, dialog的設定部份也全部更新了.

Windows'98 版との違いは次の通りです。

和Windows'98版的差別如下：

* IME は skkiserv.exe と Named Pipe を利用してメッセージのやり取りを行います。実際に辞書の管理を行うのは skkiserv.exe の仕事となっています。
* IME 是利用 skkiserv.exe 及 Named Pipe 執行Message的傳送及接收。實際去管理字典的是 skkiserv.exe 的工作

* Windows2000 の制約から Unicode 版のみです。
* 因為 Windows2000 的限制, 所以只有 Unicode 版本。

* 設定をファイルに置くのではなく、レジストリの中に置くように修正しました。
* 修正了不將設定儲存於檔案，改成儲存於Registry。

* 以前の skkiserv.exe と違い、skkiserv.exe が読み込むのは辞書設定だけになっています。(lisp を parse するのを DLL 内でするのは無理がありましたが、レジストリに書くようにしましたので)
* 和以往的 skkiserv.exe 不同、skkiserv.exe 的讀取變成只在字典設定時。(因為將 Parse lisp 放在 DLL 裡面是不可能的，所以放在registry了)


==== 既知の問題点 ====

==== 已知的問題 ====

* 設定ダイアログの不足：入力中の色設定ダイアログ など 色設定ダイアログは実装(2003/01/10)
* 設定Dialog的不足：完成了 輸入中的顏色設定Dialog 以及 顏色設定Dialog(2003/01/10)

* 設定ダイアログの不備：幾つかのボタンが動作しない(「更新」)
* 設定Dialog的不完備：一些按鈕沒有動作 (「更新」)

* LISP：j-num-list を更新していないので、times が動作しない。
* LISP：因為沒有更新j-num-list, 所以times沒有動作 

* ユーザ辞書：skkiserv スタート時のユーザ辞書の状態判定が甘い。
* User字典：啟動skkiserv的User字典狀態判定太簡陋。

* UI Window が RootWindow Style？ の時におかしくなる。(デスクトップで文字入力を試すと簡単に再現できる)
* UI Window 在 RootWindow Style？的時候會變奇怪。(在Desktop嚐試輸入文字時將會簡單的重現)

* IME が閉じている状態で再変換すると変になる。 (2003/01/02)
* 在IME關起來的狀態下再變換會變奇怪。 (2003/01/02)

* ソート済み辞書の okuri-ari 検索に失敗することがある。手元で再現させようとテスト中、まだ具体的な再現方法が分からない。Release Build 時、最適化にひっかかって発生するようである。最適化によって問題が出る部分は修正したので、テストを Release Build で継続中。(2003/01/04) fix できた模様。(2003/01/10)
* 已排序的字典的 okuri-ari 在檢索的時候會失敗。在手動重現的試驗中，具體的重現方法仍然不曉得。Release Build 的時候、似乎是起因於最佳化的關係。因最佳化而產生問題的部分已經修正、斷斷續續的將 Test 拿來 Release Build 中。(2003/01/04) 似乎已經修好了的樣子。(2003/01/10)

* 候補表示の際に意味を表示する。ただし、これは変換候補表示 Window のデザインにも関わるので、どう解決するかはまだ思いついていない。 Annotation の表示機能を追加 (2003/01/13)
* 候選表示的時候顯示意思。但是，因為這個關係到變換候選顯示Window的Design、目前還沒有想到要怎麼解決。 追加了Annotation的顯示機能 (2003/01/13)

* Text Service Framework との連携がない。Text Service Framework というのは OfficeXP, WindowsXP の伸びる Toolbar のあたりを司る代物です。 Text Service Framework の対応までは行かないが、言語バー用のコードを追加。(2003/01/27) 2003/01/27 の段階のバグを修正。(2003/01/30) default の IME にすると派手に落ちるバグの修正？ (2003/02/01) 初期化/非初期化位置の調整。(2003/02/02) 更に調整。(2003/02/13)
* 沒有與 Text Service Framework 的互動。所謂 Text Service Framework 是指執掌 OfficeXP, WindowsXP 的延伸 Toolbar 周邊的東西。 雖然與 Text Service Framework 的對應還沒辦法運作、追加了語言Bar用的Code。(2003/01/27) 修正了 2003/01/27 階段的Bug。(2003/01/30) 修正了轉換為 default 的 IME 時會慘烈的掉下來的Bug？ (2003/02/01) 初始化/非初始化位置的調整。(2003/02/02)再次調整。(2003/02/13)

* ログオフが遅くなる？ (2003/04/28) 修正＆テスト中です。
* Logoff速度變慢？ (2003/04/28) 修正與測試中。

* イベントログのアプリケーションに UserEnv の警告が出る。(2003/05/28) 調査中です。どの操作が具体的に悪いことをしているのか…(勿論レジストリ操作が問題なわけですが)。
* 在EventLog的Application中跑出 UserEnv 的警告。(2003/05/28) 調査中。哪一個操作具體的做了壞事呢？…(雖然問題的原因絕對是Registry的操作)。


==== 未解決のバグリスト ====

==== 未解決的Bug List ====

|現象|取り敢えず対処方法|発生した環境|レポート日|状況|
|言語バーのアイコンが変になることがある。(例. ツールボタンが2つ入るなど)|言語バーをタスクバーにしまってから復元すれば一応余分なアイコンは消えるようである。|WindowsXP (WindowsUpdate により SP1) + OfficeXP SP2|2003/03/12|調査中|
|言語バーのアイコンが JP という青いアイコンだけになる|不明|Windows2000Pro + Office2000 + MS-Project2002|2003/03/10|環境構築中|
|特定のフォルダで Shift+Delete でファイルを削除しようとすると、Exprorer が「応答なし」になる|不明|Windows2000Pro + Office2000 + MS-Project2002|2003/03/10|環境構築中|
|特定のアプリケーションで仮名が半角カタカナでしか入らない？|不明|WindowsXP + CHOCOA/PuTTY？(未確認)|2002/?/?|調査中|

|現象|大略對應方法|發生環境|報告日|状況|
|語言Bar的Icon有時會變奇怪。(例如. 進入兩個Tool Button等)|將語言Bar收至Deskbar之後還原的話總之會將多餘的Icon消掉。|WindowsXP (由 WindowsUpdate 更新至 SP1) + OfficeXP SP2|2003/03/12|調査中|
|言語Bar的Icon變成只剩下JP一個青色Icon|不明|Windows2000Pro + Office2000 + MS-Project2002|2003/03/10|環境建構中|
|特定的Folder裡 Shift+Delete 欲將檔案刪除時、Exprorer 會變成「沒有回應」|不明|Windows2000Pro + Office2000 + MS-Project2002|2003/03/10|環境建構中|
|特定的Application裡 假名只能輸入半形假名？|不明|WindowsXP + CHOCOA/PuTTY？(未確認)|2002/?/?|調査中|

やはり言語バー (Text Service Framework) まわりは難しいですね…。DDK の中にサンプルがあれば良いのですが。(PlatformSDK の中にはあるが、そちらは COM を作ろうになってしまう)

果然語言Bar (Text Service Framework)周圍部分很難呢。要是DDK中有範例的話那就好了。(PlatformSDK裡頭雖然有，但那會變成要用COM來做)

==== 実装リストに入っているが未実装の機能 ====

==== 有在實作List裡但卻沒有實作的機能 ====

* Reconversion の実装。 Reconversion の kakasi との連携。
* 實作Reconversion。 與 Reconversion 的 kakasi 互動。

* Reverse Conversion。辞書の構造上、逆変換を行うのは非常に困難であるが…一応リストに加えておく。恐らくは kakasi と連携するぐらいしか手がない。
* Reverse Conversion。在字典的構造上、雖然執行反變換非常困難…總之加入List裡。恐怕除了與 kakasi 的互動之外沒有其他方法。

* 連想辞書、edict 辞書の対応…。
* 聯想字典、edict 字典的對應…。

* Text Service Framework の実現。例えば、Outlook Express では言語バーがきちんと更新されませんが、これは Text Service Framework 経由で呼ばれているからです。次期 Windows では IME はきっと COM になると予想していますし、この対応はしなければ…。 仮実装(テスト中)(2003/05/28)
* 實現 Text Service Framework。比如、在 Outlook Express 裡，語言Bar沒有辦法正常的被更新、因為這是經由 Text Service Framework 呼叫的緣故。下個階段的 Windows 裡 IME 預計一定會變成COM，如果沒有辦法對應的話…。 暫時實作完成 (測試中)(2003/05/28)

* 再帰登録モードの抑制。PSO で遊んでいて…チャット中に再帰登録モードに入ると悲しいので、例えば「候補表示ウィンドウが自前(IME側)では持てない場合には、再帰登録モードには入らない」とか、Property 設定でコントロールできるようにするとか考えています。 一応実装…が、きちんと IME に composition window は表示しない、とアプリケーションから伝えられないとうまく動作しないです。画面外にウィンドウを表示して胡麻化そうとするタイプではうまく動作しません。また、Text Service Framework 側には…この操作はないです。アプリケーションからどういう情報を得られるのか…？(2003/05/28)
* 抑制再歸登錄Mode。用PSO玩了一下…Chat中進入再歸登録Mode的話將會令人難過、比如說「候選表示 Window沒有擁有自己的獨立（IME這邊）的情況、無法進入再歸登録Mode」、考慮在Property 設定時變的可以控制。 基本上是實作了…但是、在IME沒有辦法好好的顯示 composition window、以及如果沒有從 Application 傳過來的話就沒有辦法正常運作。在畫面外面顯示Windows想要隨便騙過去輸入的話將沒有動作。又、在 Text Service Framework 這邊…沒有這樣的操作。從Application可以得到什麼樣的情報呢？(2003/05/28)

* T-Code 入力。
* T-Code 輸入。

* DVORAK 配列に対応する。
* 對應 DVORAK 排列。

* 数値変換の #4, #5 の実装。(これは 1.0 のリリースが終わってからにするべきか)
* 數值轉換的 #4, #5 已實作。(這不是應該在 1.0 的Release完成後就應該完成的嗎)

WINDDK2600 にて開発を行っているので、ソース自身は WindowsXP/2000 の両方で動くバイナリを作成できる筈ですが、まだきちんと確認していません。

因為在 WINDDK2600 開發、雖然Source本身在 WindowsXP/2000 兩邊作成了可以執行的Binary、但還沒有仔細的確認。

==== Text Service Framework に追加する方法 ====

==== 追加到 Text Service Framework 的方法 ====

inf を利用して install を行うと、WINDOWS directory 以下 IME/SKKIM10 の下に skimic.dll がコピーされていると思います。

    cd %windir%\IME\SKKIM10
    regsvr32 skimic.dll

と行うことで install ができます。

利用 inf 執行 install 的話、skimic.dll 應被 Copy 到 WINDOWS directory 以下 IME/SKKIM10 的下面。

    cd %windir%\IME\SKKIM10
    regsvr32 skimic.dll

照這樣輸入的話將可以 install。

が、一度 install してしまうと削除が困難なので注意して下さい。uninstall するためにはレジストリを編集する必要があります。

但是請注意 install 一次以後反安裝會相當困難。如果要 uninstall 則必須修改Registry。

レジストリエディタを利用して、

   HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\CTF\TIP\{830DE831-E04D-40BB-8683-1E179A5F1A4F}

のキー以下を削除して下さい。これで Text Service Framework 版と IME との連携が切断されます。

利用Registry Editor、將

   HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\CTF\TIP\{830DE831-E04D-40BB-8683-1E179A5F1A4F}

的Key以下刪除。這樣就可以將 Text Service Framework 版和 IME 的互動切斷。

もしくは、

   regsvr32 /u skimic.dll

を実行します。

或者執行：

   regsvr32 /u skimic.dll

。

Text Service Framework と統合する利点は次の通りです。

和 Text Service Framework 整合的優點如以下。

* Internet Explorer の security の設定 tab を動かして、適用 or OK を押した後の反応が軽い。
* 言語バーの表示順序が正しくなる。(本来はヘルプの左側に入力モードなどのアイコンが出ないといけない)

* 將 Internet Explorer 的 security 設定 tab 作更改動作、按下 Apply or OK 後反應輕微。
* 語言Bar的表示順序將變正確。(本來要是沒有Help的左側的輸入Mode等的Icon的話不行)

Text Service Framework 版はまだ作成中かつテスト中です。具体的に次の機能が欠落しています。

Text Service Framework 版還在施工中外加測試中。具體的缺少了以下的機能。

* LISP 変換、日付入力
* LISP 變換、輸入日期

* 言語バーメニューからの操作
* 從語言Bar Menu的操作

* Reconversion (= ITfReconversion を実装すること)
* Reconversion (= 實裝ITfReconversion)

* テスト(一通りの動作を確認して、メールを数通書いてみて試した、までです)
* Test(確認所有運作、試過通了幾封信、如此而已)

==== 動作確認を行ったアプリケーション ====

==== 運作確認過的Application ====


* OfficeXP personal (一通りだけ、となりますが)
* OfficeXP personal (只確認過一回而已)

* Outlook Express 6.0sp1
* Internet Explorer 6.0sp1

==== Undocumented な情報 ====

==== Undocumented 的情報 ====

きちんとまとめないといけないと思いつつも、何処にも記載されてない機能を(しかも分かりにくい)書きます。

總覺得不好好整理不行，在這裡寫沒有任何地方記載(而且難以理解)的機能

* 辞書設定ダイアログのリストボックスには順序があります。上から順番に辞書は検索され、変換結果もその順番に出ます。辞書の検索順序を入れ替えるには、リストの要素を Drag & Drop して移動させて下さい。
*在字典設定Dialog的ListBox辞書設定是有順序的。從上面開始逐次的檢索字典、變換結果也是依據那個順序出現。如欲改變字典的檢索順序、請 List的要項 Drag & Drop 移動。

* かなモードから Control-q で JISX0201-1976-KATAKANA 入力モード(いわゆる半角カナ入力モード)へと切り替わります(トグル動作)。
* 在假名模式按 Control-q 將轉換至 JISX0201-1976-KATAKANA 輸入模式(就是所謂的半角假名輸入模式)(Toggle機制)。

* まる数字は、一応直接コード入力から入れることが可能です。
* 所有數字、大致可以直接用Code輸入。

ソースコードから実行形式を作るにあたって

WINDDK を入手します。ただ、Microsoft から download できなくなっているのか、order するか MSDN Subscriber になる必要があるみたいです。手元では Windows DDK 2600.1106 を利用しています。

有關從Source Code作成可執行形式 WINDDK 到手了。只是、從 Microsoft 變成不能 download 了、想要 order 好像必須成為 MSDN Subscriber 才行。手邊是利用 Windows DDK 2600.1106。

Windows DDK のインストール自体は installer が走りますし、出てくるメッセージに従って[Next]を選択していれば完了します。(インストールするファイルを選択したり、インストール先を設定したりしなければなりませんが。)

Windows DDK 的安裝本身就會執行 installer、根據跑出來的訊息選擇[Next]就可以完成。(只是不選擇Install的File以及不設定Install的目的位置是不行的。)

首尾よくインストールが完了すれば、Start Menu に Development Kits が追加されている筈です。 Start - Program - Development Kits - Windows DDK 2600.1106 - Build Environments - で Windows2000 Checked Build Environments か WindowsXP 32bit Checed Build Environments を選択します。

從頭到尾好好的安裝完了以後、在 Start Menu 應該會追加 Development Kits。 在 Start - Program - Development Kits - Windows DDK 2600.1106 - Build Environments 的地方選擇 Windows2000 Checked Build Environments 或者 WindowsXP 32bit Checed Build Environments。

先にダウンロードしていたソースアーカイブを適当なディレクトリで展開しておきます。例えば、 C:\tmp でしょうか。

將之前下載的Source Achieve在適當的目錄下展開、比如說 C:\tmp 。
