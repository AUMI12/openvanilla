= !OpenVanilla 0.7.0rc4 檔案安裝位置 =

以下分別就輸入法模組及 OV 的構成做說明：

=== 泛用輸入法模組及反查模組 ===

 /Library/OpenVanilla/0.7.0/Modules/OVIMGeneric/

OV 泛用輸入法模組的資料位置。將符合 .cin 格式規範、以 UTF-8 編碼格式的輸入法資料檔放進這個目錄裡，再開啟應用程式，就會看到新的輸入法出現於選單中。

 /Library/OpenVanilla/0.7.0/Modules/OVOFReverseLookup/

OV 字根反查模組的資料位置。將符合反查資料格式的 .cin 檔（同樣須以 UTF-8 編碼）放進這個目錄裡，再開啟應用程式，就會看到新的反查模組。

=== OV 的構成 ===

 /Library/Components/OVInit.bundle

這是 OS X 的 "text service component" （即輸入法）所放置的位置。OV 自 0.7 開始，改由 OVInit.bundle （0.6.x 由 OVLoader.bundle）開始載入。

OVInit.bundle 是一個相當精簡、以 C 語言配合 Carbon 程式庫寫成的模組，它唯一的功能便是在 Apple 的 text service manager 以及真正的 OVLoader 間搭起橋樑。OVInit 啟動的時候會去接下來的位置尋找 OVLoader。如果沒找到，OVInit 便停止起始動作。這時你會看到螢幕上空有 vanilla icon ，卻沒有輸入法可用（可正常打出英數字）。

 /Library/OpenVanilla/0.7.0/OVLoader/OVLoader.bundle

這是真正的 OVLoader ，負責收集模組資訊、讀取使用者偏好設定檔，然後啟動預設的模組。OVLoader 是以 Objective-C++ 配合 Cocoa 程式庫所撰寫成。

 /Library/OpenVanilla/0.7.0/Modules
 ~/Library/OpenVanilla/0.7.0/Modules

自 0.7.0 開始，OVLoader 會從上述兩個目錄尋找可用的動態程式庫，模組延伸名必須是 .dylib , .bundle 或是 .app 。模組必須符合 <OpenVanilla/OVLibrary.h> 所定義的 OV 動態程式庫規範。OV 模組便是從這些程式庫裡「擠」(milk) 出來的。

 /Library/OpenVanilla/OVLoader/OVDisplayServer.app

OV 的選字窗顯示伺服器，負責提供選字窗及訊息窗顯示功能。

 /Library/OpenVanilla/OVLoader/OVPreferences.app

OV 的使用者偏好設定程式

 ~/Library/OpenVanilla/0.7.0/Preferences/

這個目錄存放各個使用者的偏好設定檔，預設為 org.openvanilla.org.070.plist 。除了使用 OV 偏好設定程式外，您也可以用任何文字編輯器或 Apple 自己的 plist editor 來編輯該檔案。

 ~/Library/OpenVanilla/0.7.0/UserSpace/

有些輸入法（例如酷音）需要空間存放使用者自訂資料（例如使用者詞庫或學習詞庫等），這些資料都放在這個目錄裡。
