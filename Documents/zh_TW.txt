n= OpenVanilla 輸入法框架 0.6.3 使用說明
http://openvanilla.org/

2004 © lukhnos D. Kang-min "gugod" Liu, Barabbas Jian, Pektong Chen. Wei-zhong "zonble" Yang and Mengjuei Hshieh.

劉燈、劉康民、姜天戩、陳柏中、楊維中、謝孟叡版權所有

== 簡介 ==

OpenVanilla（簡稱OV）是一套免費的、開放原始碼的、針對 MacOS X 平台設計，可以動態載入各種輸入法的中文輸入法架構（Framework）。OV 本身並不是一個輸入法，而是一個負責載入各種輸入法資源的載入程式，擔任各種輸入法與作業系統之間的橋樑。透過OV，您可以使用倉頡、簡易、行列、注音，以及不需要手動選字的酷音輸入法，您也可以刪除不需要的輸入法，得到一份清爽的輸入法選單。

在 OV 當中，您更可以獲得更多在中文輸入的自由。OV 支援 Xcin（一套普遍應用在 Linux 、FreeBSD 等作業系統的視窗環境Xwindow下的中文輸入介面）格式的輸入法表格— cin 檔案，透過 cin 檔案，您可以完全修改原本的輸入法設定，包括重新設定按鍵定義、新增文字或詞彙，甚至，您可以發明一套屬於您自己的輸入法。

OV 與蘋果內建的中文輸入法 TCIM（Traditional Chinese Input Method），或其他在麥金塔平台上的輸入法差別，在於改善了程式的效能，而沒有像TCIM在第一次啟動時，需要花上許多時間載入的問題，也克服TCIM中的漢音輸入法不支援許氏鍵盤、以及行列等輸入法需求的困境。

更重要的是，OV是一個開放原始碼的自由軟體專案，除了是累積了過去「 SpaceChewing 酷音輸入法」與「香草輸入法」開放原始碼開發經驗的成果，在遇到任何中文輸入方面的問題，我們可以快速回應，並且自行動手解決；而任何願意繼續讓OV更好的朋友，也都能夠一同參與開發，快速發現當中可能存在的問題。

== 安裝環境 ==

您需要安裝 MacOS X作業系統的麥金塔電腦。目前 OV 主要在MacOS X 10.3 Panther下開發，目前已知在10.2以前的環境下無法運作，不過我們正在努力嘗試解決此一問題。

== 下載安裝 ==

您可以OV位在中研院資訊所自由軟體鑄造場的專案頁面下載區（ http://rt.openfoundry.org/Foundry/Project/Download/?Queue=209 ）中，取得最新版本的OV安裝套件，下載完成後直接點選安裝套件圖示，便開始進行安裝。

完成安裝後，OV主程式會安裝在「/Library/Components」底下，也就是在「資源庫」底下的「Components」裡頭，您可以看到一個叫做 OVLoader.bundle 的圖示。

== 反安裝 ==

如果您想要反安裝OV，請參照以下步驟。

=== 自動反安裝 ===

因為 OV 使用 Installer Package 安裝，所以，您可以使用OSX Package Manager（OSXPM）這個管理套件的工具，刪除 OV 的安裝套件。 OSXPM 可以從OSXGNU（http://www.osxgnu.org/）下載。另外，您也可以參見 OSXGNU 上的使用說明：

http://www.osxgnu.org/info/pkgdelete.html

在刪除完畢後，請重新登入。

=== 手動反安裝 ===

您也可以手動刪除 OV ，OV 的資料會裝在以下位置：

* /Library/Components/OVLoader.bundle/	（輸入法載入器）
* /Library/OpenVanilla/	（各種輸入法套件）
* /Library/PreferencePanes/OVPrefPane.prefPane/	（OV在系統偏好設定中的程式）
* /Library/Frameworks/OpenVanilla.framework/	（OpenVanilla Framework）
* /usr/local/lib/libchewing*	（酷音輸入法使用的libchewing）

請在「系統偏好設定」→「國際設定」中關閉OV之後，刪除這些檔案後，重新登入。

== 使用方法 ==

OV 的基本使用方式如下：

=== 啟用 ===

在安裝完之後，請重新登入。然後，請在「系統偏好設定」（SystemPreference，位在螢幕左上角蘋果選單中）裡頭，打開「國際設定」（International）中的「輸入法選單」（Inputmethod），在列表中，就可以看到多了一個「OV輸入法載入器」（繁體中文語系）或是「OpenVanilla Loader」（英文語系），出現的圖示是一朵花的圖案。您也可以在螢幕左上角的輸入法選單中，直接選擇「打開國際設定⋯」。

勾選之後，就可以在螢幕右上角的「輸入法選單」上，看到OpenVanilla圖示。您只要在輸入法選單上，或是使用Command按鈕（/⌘）加上空白鍵切換輸入法（或使用Command按鈕加上option按鈕，在加上空白鍵，三個按鍵一起按之後切換各國輸入語系），就可以切換到OV。

=== 切換輸入法 ===

您只需要在OV的下拉選單中，點選您想要使用的輸入法，或是按下對應的快速鍵，就可以切換輸入法了。

=== 簡繁體中文轉換 ===

OV提供即時的簡繁體中文轉換功能，也就是，您可以使用正體中文的輸入法，打出簡體中文字。方法是在選單中切換「正常輸出」、「打正體字出簡體字」以及「打簡體字出正體字」選項。

=== 全形半形符號切換 ===

您可以選擇在輸入的時候，使用的是全形或半形英數。方法是在選單中點選「半形英數字」或「全形英數字」。

=== 輸入超過 Big5 範圍的文字 ===

根據您所使用的輸入法，您可以透過 OV 輸入各種 Unicode 所囊括的範圍當中的文字，OV提供的台語白話字輸入法就是用到了特殊的羅馬字母，藏文更是用到了Unicode的藏文，甚至，您可以透過 OV 輸入克林貢文。目前大部份的 MacOS X 的應用程式都已經支援了Unicode ，不過有些軟體則不然。

就以您購買蘋果電腦時，往往會附贈的辦公套裝軟體— AppleWorks 6 來說，就只能夠支援純 Big5 環境，所以，如果當您在 AppleWorks 中輸入某些超過Big5的文字，您會發現輸入法會突然卡住，例如你想要打「堃」，就會突然在輸入「ㄎㄨㄣ」之後卡住而無法動彈。這主要是應用程式對不同的文字編碼的支援問題，在輸入法的部份，沒有辦法處理這樣的狀況，即使是 OSX 系統內建的中文輸入法，也有同樣的問題。目前知道有這種問題的軟體只有 AppleWorks ，不過，還是希望您稍微注意。

== 偏好設定 ==

您可以在 OV 的選單中，按下「偏好設定」，或是在「系統偏好設定」中，選擇「 OpenVanilla 」，就可以設定各種選項。您可以設定選字視窗的字體大小、在錯誤時是否發出警示聲，以及注音、酷音輸入法使用的鍵盤配置等。

== 各項輸入法相關說明 ==

OV 本身只是一個輸入法架構，您可以決定這個架構，要載入、使用那些輸入法。

OV 提供兩種不同的輸入法模組：一是Xcin輸入法模組，Xcin輸入法模組的各種輸入法檔案，是純文字的表格，放在「資源庫」→「 OpenVanilla 」→「版本號」→「 OVIMXcin 」下，是您可以自由編輯、修改的。

其次是獨立的輸入法模組，這些輸入法因為在設計上較為複雜，需要能夠調整的設定較多，無法就一個純文字表格，完成所需要的功能，而必須設計在程式中，如果您想要修改獨立的輸入法模組，您需要下載OV的程式原始碼，自行編譯。如果您想要修改輸入法的設定，請參見手冊中「自訂選單、修改與設計自己的輸入法」部份。

以下要說明的，除了在安裝套件中的輸入法外，還包括在輸入法加值包當中的輸入法。

=== Xcin 輸入法模組 ===

以下介紹的是各種在 Xcin 模組下可以使用的輸入法，這些輸入法都可以透過修改表格，自訂新的按鍵組合，修改的方式請參見手冊中「自訂選單、修改與設計自己的輸入法 」部份。

此外，在使用這些輸入法時，只要按下shift按鈕並且按下英文字母按鍵，就可以送出小寫英文字母，按下Caps Lock按鈕後，就會進入到英數模式。您可以使用選單上的「全形英數字」與「半形英數字」選項，切換要輸入全形或半形英數。

==== 倉頡與簡易輸入法 ====

在 OV 的前身「香草輸入法」的開發過程中，「香草輸入法」似乎解決了許多中文使用者在使用倉頡輸入法時的困擾，而怎樣滿足倉頡輸入法的各種使用習慣，也是在開發OV的各種輸入法時，遇到最複雜的狀況的地方。

MacOS X 10.3在 TCIM 中內建的倉頡輸入法，因為支援輸入Big5-HKSCS編碼中的異體字以及簡體中文，而造成許多原本的倉頡字根，並沒有對應到許多使用者所預期的中文字，另外倉頡本身就有多種版本，包括倉頡三代、倉頡五代等等，而內建的倉頡輸入法則是混用了多種版本的倉頡字根，而造成相當大的混淆。

OV Xcin 模組中所提供的是來自Xcin的倉頡輸入法，以倉頡三代為基礎，而根據您的需要，您也可以自行轉換或取得第五代倉頡、順序速成、快倉2000等版本的倉頡輸入法表格，替代內建的倉頡輸入法。

系統內建的倉頡輸入法預設值是會在您輸入字根的同時，即時列出符合目前所輸入字根的候選字，按下數字鍵便可以直接選字；OV 目前的設計，與內建的中文輸入法 TCIM 在這一點上稍有不同，TCIM 會列出所有以目前字根開頭的候選字，而 OV 則是列出完全符合符合目前字根的候選字，也就是比方說，當您打下「A」的時候，TCIM會從是（日一卜人）開始列出，而 OV 則會列出符合只有一個「日」子根的後選字「日」與「曰」。

如果您的習慣是在打完字根之後，按下空白鍵才出現各種候選字的話，您可以關閉這個選項，調整選項的方式，請參見手冊中「進階設定」部份。

==== 漁村符號輸入法 ====

漁村符號是一套好記，以符號外觀對應的鍵盤按鍵設計為原則，設計用來快速輸入各種在Unicode 當中特殊符號的輸入法，這套輸入法的淵源與背景請參考附錄。簡單來說，透過漁村，您可以輸入的符號包括：

* 各種特殊的英文與數字符號，只要直接輸入單一的英文字母或數字即可。例如打「a」可以產生「⒜」、「ⓐ」、「ⓐ」，打「1」就會出現「①」、「⑴」、「⒈」等；因為unicode 符號的限制，數字最多可以到 50。
* 各種圓形、方形與三角形等符號。打出圓形符號的方法是按下句號「.」，方形是逗點「,」，三角形則是「/\」或「\/」，星形符號是「*」等。按下「<」、「<<」、「>」與「>>」，則可以輸入各種括弧或現代書名號，例如「»」。
* 可以用來輸入各種箭頭。可使用的按鍵包括「<-」（←）、「->」（→）、「<\」（↖）、「/>」（↗）、「</」（↙）、「\>」（↘）、「<->」（⇄）「<|」（↑）、「|>」（↓）等等。
* 可以輸入八卦符號，以「|」代表乾卦，以「:」代表坤卦；例如「:|:」就是「☵」。
* 音符符號。如「o/~」可以輸入「♪」。
* 輸入「pen」，可以列出所有與筆相關的符號。「mail」與「tel」也分別代表郵件與電話相關符號。
* 輸入「astro」，可以列出所有的西洋星座符號。
* 輸入「planet」，可以列出所有的西洋九大行星代表符號。
* 輸入「chess」，可以列出所有的西洋棋符號。
* 輸入「poker」，可以列出所有的橋牌符號。
* 蘋果系統符號。例如打「cmd」可以打出「⌘」、「」，打「opt」可以打出「⌥」、「⎇」。
* 其他特別符號。例如「sss」可以輸入溫泉符號「♨」，「ox」可以輸入「☠」等。

由於漁村輸入法本身的 cin 檔案不會很大，所以，如果想要知道漁村輸入法全部支援的符號，不妨使用文書編輯軟體，開啟漁村輸入法的 cin 表格。

==== KK 音標輸入法 ====

就某方面來說，kk音標輸入法也可以算是一種中文輸入法吧？因為現在全世界，好像就只有台灣使用KK音標進行英文教學，在MacOS X平台所支援的Unicode字碼與字體中，都能夠顯示KK音標所使用的各種拉丁字母，但是卻缺少一套可以方便輸入的方式。 KK音標輸入法輸入特殊音標符號的方法是：

* 打「a」可以選擇「α」或「ə」。
* 打「e」可以選擇「ε」或「e」。
* 打「i」可以選擇「ɪ」或「i」。
* 打「o」可以選擇「ɔ」或「o」。
* 打「u」可以選擇「ʊ」或「ʌ」。
* 打「ae」會出現「æ」。
* 打「er」會出現「ɚ」。
* 打「ur」會出現「ɝ」。
* 打「th」可以選擇「θ」或「ð」。
* 打「gr」會出現「ʤ」。
* 打「sh」會出現「ʃ」。
* 打「ch」會出現「ʧ」。
* 打「ng」會出現「ŋ」。
* 其他按鍵會直接打出原本的英文字母。 

=== 獨立的輸入法模組 ===

==== 注音輸入法 ====

OV 提供的注音輸入法源自於香草注音輸入法，是傳統的、必須手動選字的注音輸入法。與系統內建的注音輸入法比較，OV所提供的注音輸入法提供倚天鍵盤配置，您可以在OpenVanilla系統偏好設置中切換。

==== 行列輸入法 ====

MacOS X內建的中文輸入法中，一直缺乏對於行列輸入法的支援，可說是行列使用者在使用蘋果作業系統時的一大憾事。感謝行列科技廖明德先生（也就是行列輸入法的發明人）慷慨提供行列輸入表格，OV所使用的行列輸入法表格是使用Unicode編碼的，包含繁、簡中文字集共兩萬九千餘字。

關於行列輸入法的各種相關資訊，請參見行列科技網站：http://www.array.com.tw/ 。

==== 酷音輸入法 ====

酷音輸入法是一套可以智慧選字的中文輸入法，類似於漢音、自然以及微軟新注音輸入法。酷音輸入法原本是在 Linux / FreeBSD 下的中文環境下開發，而之前也已經有 SpaceChewing 這樣的移植到 MacOS X 平台上專案。

OV 的酷音輸入法改變過去的 SpaceChewing 的架構，使用「新酷音」專案的 libchewing，將原本 SpaceChewing 與新酷音兩個酷音輸入法的開發分支合一，日後新酷音有任何新功能，也可以立即讓 MacOS X 的使用者享有，我們目前也努力將原本 SpaceChewing 的功能，慢慢加入到 libchewing 中。

而在 MacOS X 平台上，已經內建了類似的漢音輸入法，而酷音與漢音輸入法的不同之處，包括支援許多人已經非常習慣在 Windows 平台上的自然輸入法所提供的許氏鍵盤，另外，也支援倚天鍵盤配置以及倚天二十六鍵鍵盤。

===== 選字及選詞 =====

當您在打字的時候，只要按下空白鍵、或在方向鍵上按「下」，就會在您輸入位置的下方，跳出選字視窗，在選字模式下，可以選詞與選字，然後，按下數字鍵1到7（在許氏鍵盤配置下，則是用a、s、d、f、j、k、l），就會輸入您所選擇的字或詞。

在按下空白鍵或在方向鍵上按「下」之後，切換選字的是游標所在位置的下一個字，與漢音輸入法稍有不同，漢音輸入法是選擇游標所在的前一個字。而如果系統詞庫中，有以您目前所選擇的字音開頭的詞彙，就會先出現選詞的畫面，按一下空白鍵或「上」、「下」方向鍵，就會切換選字及選詞模式。

比如說，輸入「近視」之後，將游標移動到「近視」一詞的最前面，按下空白鍵，便可看到許多選項。此時直接再按下空白鍵，便可選不同的「近」字。

在選字或或選詞的時候，如果可以選擇的選項數量超過一頁可以顯示的範圍，就會以分頁方式呈現，只要按左鍵與右鍵，便可以翻頁，翻頁到底時會循環，回到選字的第一頁畫面，在選字（或選詞視窗）上，也會出現全部頁數、您目前所在頁數、以及是否可以按下左右鍵翻頁的箭頭指示。

如以空白鍵選詞翻頁（只能往後翻）到底時，再按一下會進入選字。在選字的時候，如果按下空白鍵，就會回到選字的第一頁。此外，如果系統中有以某個字音開頭，但是字數不同的可選詞彙，比方說，當您輸入「意氣風發」時，您便可以選擇四字詞「意氣風發」以及「意氣」，系統會先跳出四字詞的選詞狀態，再按一下空白鍵或「下」，才會跳出二字詞「意氣」的選詞狀態，然後才是「意」這個字的選字狀態。

===== 切換鍵盤配置 =====

酷音輸入法支援預設鍵盤、許氏鍵盤、倚天鍵盤、倚天二十六鍵、IBM 鍵盤以及精業鍵盤等不同的鍵盤配置，您可以在OV的偏好設定中切換。

===== 中英文混雜輸入 =====

如果在輸入的同時，按下「caps lock」按鈕，便可以在酷音輸入法環境下，輸入英文，不需要在切換到英文語系環境下，才可以輸入英文。而只要再按一下「caps lock」按鈕，就可以切換回中文輸入狀態。此外，在大多數的狀況下，只要按下shift以及其他按鍵，便可以輸入英文字母。

===== 手動斷詞 =====

有時候，系統自動選詞的結果，並不符合我們的期待，將一些不應該被判斷成詞彙的字的組合，當成是詞彙處理。比方說，您在輸入「計算機與打字機」之後，出現的結果卻是：

「計算 積雨 打字機」

這時候，您可以按下「積」和「雨」之間，按下「tab」按鈕，強迫「積」和「雨」之間斷開，而不要將「積雨」視作是一個詞彙，而得到正確的結果。在許氏鍵盤下，您也可以使用像自然輸入法一樣的方式，用「q」按鍵斷詞。

===== 加入自訂詞彙 =====

當您在輸入、選字的時候，系統就會自動幫您把詞庫當中原本沒有的詞彙，加入到您的自訂詞庫當中了，所以，在輸入的時候，系統會自動出現您最近輸入時常用的詞彙。

另外，您也可以手動加入新詞，在酷音輸入法中，目前支援兩種新增自訂辭典的方法，您可以自訂新增二字詞到九字詞。第一種是沿用過去在Xwindow環境下的方式，方法是：1.先把游標移到要存的詞的前面，2.計算要存的詞的長度，例如三個字，3.按下ctrl-3。

另外一種方法，則是考慮到許多慣用漢音輸入法的使用者的習慣，另外加入了漢音模式的加入自訂詞彙方式。方法是，當您在輸入文字的狀態下，按下 shift 按鈕以及左右鍵，便會出現一段底線加粗的文字範圍，這時候，只要再按下 enter 鍵，就可以將先前所選擇的範圍，加入自訂辭典檔案中，而如果按下的是其他的按鍵，就會跳出選字模式。

您自訂的詞彙，會儲存在您個人目錄下→「資源庫」→「OVIMChewing」下的「hash.dat」檔案中，您可以將這個檔案，複製到其他的電腦上使用，而如果您覺得酷音輸入法執行速度太慢，也可以直接刪除這個檔案，讓系統不要讀取您的自訂辭典。—很抱歉，目前還沒有管理酷音輸入法自訂辭典的工具。

===== 特殊符號輸入 =====

當您在輸入的時候，只要按下在注音符號之外的標點符號，就可以打出全形標點符號，例如shift 加上「,」，就可以輸入「，」。在許氏鍵盤配置下，您也可以直接輸入「,」，就出現全形的「，」，輸入「.」出現全形的「。」，而按下了 shift 以及空白鍵，則可以輸入全形空白。

如果您熟悉「漢音輸入法」的使用環境，您或許會習慣按下「`」按鈕，就會出現符號表選擇清單，在酷音輸入法中，也有同樣的功能，不過叫出符號表的方法是按下 ctrl 加上「1」或是「0」。

在酷音輸入法中，您也可以同時按下 ctrl 以及 option 按鈕，然後按下「a」到「z」等按鈕，也可以輸入類似過去在倚天中文環境下的特殊符號。

而因為在 MacOS X 環境中，系統已經用掉了不少的快速鍵，許多的應用程式也設計了各種的鍵盤快速鍵，在 MacOS X 中，因為系統以及應用程式的按鍵，都會比輸入法更加的優先，所以往往造成用 ctrl 以及 option 按鍵輸入的特殊符號，因為與系統或應用程式衝突而失靈。例，按下「m」會變成輸入「enter」，按下「i」會成為在英文環境下輸入「tab」的效果，系統的終端機也經常會攔截掉這些按鍵—這是 MacOS X 的先天設計問題，難以克服。

特殊符號輸入的按鍵位置與符號對應如下：

 q┌ w┬ e┐ r□ t〈 y〉 u⋯ I無 o。 p※
 a無 s┼ d無 f【 g】 h無 j○ k— l│ ;； '：
 z└ x┴ c無 vˇ b《 n》 m無 ,， .． /？

如果您經常撰寫中文學術論文，您應該會在撰寫參考書目與註腳的時候，經常需要輸入新式的書名號，在酷音輸入法下要輸入新式書名號相當方便而且快速，您只需要記住，在鍵盤中央的地方，有三組括弧，例如，按下「b」與「n」就是「《」與「》」。

==== 白話字 POJ 輸入 ====

「白話字 POJ 輸入法」是一套用來輸入台語白話字的輸入法。目前在各種作業系統中，要輸入羅馬拼音的台語符號字、以白話字進行寫作，都缺少一套方便的輸入法。而OV 的 POJ 輸入法正可以補足這樣的需要。功能如下：

* 打羅馬字母和聲符，可以出現配上調號的音節，例如打「chan2」會出現「chán」，打「peh8」 會出現「pe̍h」等等。
* 打 q 和 ou 都會出現o·。
* 在 OV 偏好設定中的修改選項後，若選擇「不要輸入 Unicode 字元，全部改用 ASCII 輸出」，則 POJ 輸入法不會產生 Unicode 輸出，而是直接出 ASCII 字母，例如打「chan2」就出現「chan2」，適合在沒有 Unicode 支援的環境使用。目前這個功能用途不大，但若以後能加入選字（打POJ出漢字），則有其實用價值。

===== 已知問題 =====

* 在Microsoft Word打出有聲調的符號，會配上錯誤的字型（例如原先使用Times New Roman，打出調號字母後，字型卻會變成新細明體），造成打出來的音節很不雅觀。
* 目前尚無POJ的音節的「文法檢查」，例如h、k、p、t字尾的音節，僅可能有四聲與八聲兩種可能，目前則無此種檢查。此外，在資料結構內部，仍可能出現chan1或peh4等多餘的資料（一聲不用加1，四聲不用加4），這需要額外撰寫函式，進行正規化（normailization）。

==== 英數輸入法 ====

英數輸入法就是直接送出您所打的英文字母或數字，您可以配合「全形英數字」選項使用，快速輸入全形的英數字。

==== 藏文輸入法 ====

OV 藏文輸入法目前提供三種鍵盤配置，包括 Sambhota Keymap One、Tibetan Computer Company Keyboard #1 以及 Tibetan Computer Company Keyboard #2。您可以在系統偏好設定中的OpenVailla偏好設定控制台中，切換藏文鍵盤配置。

您可以直接在大多數支援 Unicode 的 MacOS X 應用程式中，輸入Unicode當中的藏文，而因為在 MacOS X 中內建的簡體中文就有納入藏文的字集，所以，如果您有安裝中文套件（相信您應該會裝），在顯示藏文方面，應該沒有問題。

不過，因為藏文有組合字（Stacking）的特色，雖然大多數程式都可以輸入藏文，但目前已知只有 Cocoa 的文字編輯物件可以正確處理藏文組合字，您至少可以使用 MacOS X 內建的「文字編輯」等編輯器，正確輸入有組合字的藏文。或是，您會需要安裝能夠處理組合字的字體，例如Tibetan Machine Uni等，Tibetan Machine Uni 是一套以 GPL 授權釋出的自由軟體，您可以從 http://iris.lib.virginia.edu/tibet/xml/show.php?xml=/tools/tibfonts.xml 下載。

您可以從以下的 RTF 文件，取得關於 Sambhota 、TCC #1 以及 TCC #2 鍵盤的額外說明：

* http://iris.lib.virginia.edu/tibet/tools/jskad_docs/Sambhota_keymap_one.rtf
* http://iris.lib.virginia.edu/tibet/tools/jskad_docs/TCC_keyboard_1.rtf
* http://iris.lib.virginia.edu/tibet/tools/jskad_docs/TCC_keyboard_2.rtf

這份文件必須使用 JSKAD 這個使用 Java 寫成的編輯器開啟：
http://iris.lib.virginia.edu/tibet/tools/jskad.html

這三種鍵盤的數字鍵，都是直接輸入藏文數字： 
 ༡་ 1 ༢་2 ༣་ 3 ༤་ 4 ༥་5 ༦་6 ༧་7 ༨་8 ༩་9 ༠་0

===== Sambhota 鍵盤配置： =====

====== 子音 ======

 ཀ་k ཁ་K ག་g ང་G ཅ་c ཆ་C
 ཇ་j ཉ་N ཏ་t ཐ་T ད་d ན་n
 པ་p ཕ་P བ་b མ་m ཙ་x ཚ་X
 ཛ་D ཝ་w ཞ་Z ཟ་z འ་' ཡ་y
 ར་r ལ་l ཤ་S ས་s ཧ་h ཨ་A

====== 梵文子音 ======

 ཊ་q ཋ་Q ཌ་v ཎ་V ཥ་B

====== 組合字 ======

 སྒྲ་fsgr ལྷ་flh ཀྰ་fk'

====== 梵文組合字 ======

 ཀྲྱ་fkry ཁྑ་fkk

====== 母音 ======

 ཨི་Ai
 ཀ་k或ka ཀི་ki ཀུ་ku ཀོ་ko
 ཀེ་ke ཀཻ་kE ཀཽ་kO ཀྀ་KI

====== 標點 ======

 །་, ་空白鍵 [空白].
ཿ ་: ༔་; ྅་@ ༼་( ༽་)
 ༑་-
 ཨྃ་A& ཨོཾ་Ao& ཨིཾ་Ai& ཨཽཾ་AO&
 ཀྂ་k% ཧྰུྂ་fh'u%

=====TCC Keyboard #1 鍵盤配置：=====

====== 子音 ======

 ཀ་q ཁ་w ག་e ང་r ཅ་t ཆ་y
 ཇ་u ཉ་j ཏ་o ཐ་p ད་[ ན་]
 པ་a ཕ་s བ་d མ་f ཙ་k ཚ་l
 ཛ་; ཝ་' ཞ་z ཟ་x འ་c ཡ་v
 ར་m ལ་' ཤ་. ས་/ ཧ་> ཨ་?

====== 梵文子音 ======

 ཊ་Q ཋ་W ཌ་E ཎ་R ཥ་T

====== 組合字 ======

 སྒྲ་h/em ལྷ་h,> ཀྰ་hqc

====== 梵文組合字 ======

 ཀྲྱ་hrem ཁྑ་hww

====== 母音 ======

 ཨི་?g
 ཀ་q ཀི་qg ཀུ་qj ཀོ་qn
 ཀེ་qb ཀཻ་qB ཀཽ་qN ཀྀ་qG

====== 標點 ======

 །་\ ་空白鍵 [空白]-
ཿ ་: ༔་% ྅་$ ༼་( ༽་)
 ༑་-
 ཨྃ་?* ཨོཾ་?n* ཨིཾ་?g* ཨཽཾ་?N*
 ཀྂ་q` ཧྰུྂ་h>cj`

=====TCC Keyboard #2 鍵盤配置：=====

====== 子音 ======

 ཀ་q ཁ་w ག་s ང་e ཅ་b ཆ་n
 ཇ་m ཉ་' ཏ་o ཐ་p ད་j ན་k
 པ་r ཕ་/ བ་d མ་f ཙ་; ཚ་'
 ཛ་[ ཝ་] ཞ་z ཟ་x འ་c ཡ་g
 ར་h ལ་v ཤ་. ས་l ཧ་G ཨ་H

====== 梵文子音 ======

 ཊ་O ཋ་P ཌ་j ཎ་K ཥ་>

====== 組合字 ======

 སྒྲ་alsh ལྷ་avG ཀྰ་aqc

====== 梵文組合字 ======

 ཀྲྱ་aqhg ཁྑ་aww

====== 母音 ======

 ཨི་Ht
 ཀ་q ཀི་qt ཀུ་qu ཀོ་qi
 ཀེ་qy ཀཻ་qY ཀཽ་qI ཀྀ་qT

====== 標點 ======

 །་\ ་空白鍵 [空白]-
ཿ ་: ༔་% ྅་$ ༼་( ༽་)
 ༑་-
 ཨྃ་q* ཨོཾ་qi* ཨིཾ་qt* ཨཽཾ་qI*
 ཀྂ་q` ཧྰུྂaGcu`

==== Unicode Hex 輸入法 ====

Unicode Hex  輸入法的用途，近似於過去各種以 Big5 編碼為基礎的中文系統的內碼輸入法；在輸入了Unicode Hex 碼之後，這個輸入法就會輸出對應的 Unicode 字碼。Unicode Hex 輸入法在平常使用上或許用處不大，不過，如果您需要輸入某個特殊的、其他輸入法都無法打出的文字，而您又知道這個文字在 Unicode 當中的位置，Unicode Hex 便可以派上用場。

又，如果您有輸入在 Big5 之外，常見中文輸入法都無法處理的的特殊符號需求，或許可以試試看漁村符號輸入法（請參見 Xcin 輸入法模組部份）。

==== EZBasic 輸入法 ====

EZBasic 輸入法是一套在輸入法環境下的 BASIC 語言直譯器。就某種角度來說， EZBasic 並不算是一套輸入法，因為 EZBasic 不在處理各種語文方面的問題，而是我們為了擴大對於「輸入法可以做什麼」的想像所設計。

當我們還原輸入法最基本的原理，或是我們試圖給輸入法一個最基本的定義的時候，所謂的輸入法，就是將一連串的鍵盤按鍵，解譯、轉換成另外一種結果，或是，在某種狀況之下，電腦可以給與一段文字回應；其實所謂的輸入法不應該稱為是輸入法，而是「輸出法」，重點在當你輸入了什麼東西之後，電腦會「輸出」什麼。

您可以在 EZBasic 輸入法下，直接鍵入一行可以完成的 Basic 程式語言，按下送出按鍵enter 之後，就會將這一行程式的執行結果送出。比方說，您可以輸入「PRINT1+2」，就可以得到結果「3」，您也可以輸入迴圈如「FOR I = 1 TO 10: PRINT *: NEXT」，就會一次輸入十個「*」星號了。也就是，如果您在輸入文字的過程中，需要一些簡單的四則運算，而您又稍微了解一些 BASIC 語言，那麼，您不需要另外啟動計算機程式，在輸入法中完成運算。

另外，您也可以使用 system 語法，直接下 unix 系統指令，例如 system "ls" 。

== 進階設定 ==

OV 的所有設定資訊，都存放在您個人帳號目錄下的「資源庫」→「OpenVanilla」→「0.6.1」目錄下的「OVLoader.plist」檔案當中，在您第一次使用OV的時候，就會自動產生這個檔案。「系統偏好設定」中的「OpenVanilla」偏好設定控制台，其實也就是在修改這個設定檔案中的數值。但，因為您可以手動新增自己的Xcin模組輸入法，「系統偏好設定」所提供的選項可能不敷使用，您便會需要使用到進階設定。

這個檔案是一個 XML（eXtensive Markup Language）格式的純文字檔案，當您在「系統偏好設定」的 OV 設定中，按下「進階設定⋯」，就會以您系統中目前預設的 XML 編輯器，修改這個設定檔案。如果您有安裝蘋果的程式開發工具Xcode的話，就會用Property List Editor開啟，不然，就會開啟如「文字編輯」（TextEdit.app）等編輯器。

在OVLoader.plist中，每一段的設定，都是以key與dict兩個標籤組成，例如酷音輸入法的設定，就是：

<key>IM-OVIMChewing</key>
<dict>
    <key>keyboardLayout</key>
    <integer>0</integer>
</dict>

其中，兩個key標籤中的名稱「IM-OVIMChewing」，就是酷音輸入法的代號，而dict當中的內容，代表的是keyboardLayout為0，也就是鍵盤配置使用的是預設配置。

每個獨立的輸入法模組，都會有不同的設定值，而如果是Xcin模組下的輸入法，則會使用相同的四組設定值，例如Xcin倉頡輸入法的設定可能是：

<key>IM-OVIMXcin-cj.cin</key>
<dict>
    <key>autoCompose</key>
    <integer>0</integer>
    <key>hitMaxAndCompose</key>
    <integer>0</integer>
    <key>maxKeySequenceLength</key>
    <integer>5</integer>
    <key>shiftSelectionKey</key>
    <integer>0</integer>
</dict>

在輸入法的名稱方面，Xcin模組的輸入法，都會以「IM-OVIMXcin」開頭，後面則是輸入法表格cin檔案的檔名。OV提供的cin檔案名稱如列表：

* 倉頡：cj.cin
* 大易：dayi3.cin
* 粵語拼音：jyutping.cin
* 正體拼音：pinyinbig5.cin
* 簡易：simplex.cin
* 日文假名：ukiyoe.cin
* 簡體倉頡：zhcn_jtcj.cin
* 簡體注音：zhcn_phonegb2.cin
* 簡體拼音：zhcn_pinyin.cin
* 簡體雙拼：zhcn_shuangpin.cin
* 簡體五筆字形：zhcn_wubizixing.cin

而各項設定的意義如下：

=== maxKeySequenceLength 按鍵組合上限 ===

這個選項的意思是某個輸入法最多可以用幾個按鍵，組出一個字或是詞彙。例如注音輸入法每個字都是以三個注音符號加上一個音調號組成，所以最多是四個按鍵，而這個設定就是4。漁村符號輸入法最多需要打「planet」這樣六個字，產生九大行星符號列表，所以就是6。這個選項必須是大於0的整數。

=== AutoCompose 自動組字 ===

是否在打入按鍵時，同步顯示目前打入的字根的組字結果，而不用按下空白鍵才組字。這個選項為1或0，1是啟用，0為停用。

=== hitMaxAndCompose 按鍵達上限時組字 ===

當您輸入的按鍵數目到了前面定義的上限的時候，是否要直接送出組字的結果，而不用按下空白鍵組字。這個選項為1或0，1是啟用，0為停用。

=== shiftSelectionKey 移動選字候選按鍵排列 ===

一般而言，在跳出選字窗的時候，所有候選字的按鍵，都會是從「1」開始的數字鍵；而在您開啟了  shiftSelectionKey 選項之後，則是以空白鍵選第一個字，從第二個字開始以「1」開始排列，在嘸蝦米或大易等有候選字，但是候選字較少的輸入法中，可以方便您使用空白鍵快速輸入第一個候選字。這個選項只能是1或0，1是啟用，0為停用。

== 自訂選單、修改與設計自己的輸入法 ==

OV最大的特色之一，就是能夠更方便的修改安裝包當中內建的輸入法表格，符合自己的特殊需要，比方說就原本的注音或倉頡輸入法，新增幾個自己所習慣的按鍵；也可以使用比蘋果TCIM所提供的輸入法編輯工具更具有彈性的方式，設計自己的輸入法。

或這麼說，許多朋友都有在MacOSX上找不到嘸蝦米輸入法可用的問題，OV目前也無法直接提供嘸蝦米輸入法，原因是在嘸蝦米輸入法的所有者行易公司，對產品的政策問題。而如果您可以找到嘸蝦米輸入法的表格，並且轉換成OV所使用的格式，然後放到OV的輸入法檔案目錄中，單純就技術上來說，要實現在OV架構下使用嘸蝦米，是可行的；但是這樣未經行易公司授權，便逕行使用嘸蝦米輸入法，請三思您所必須負擔的責任。

可以使用表格方式載入，而在目前OV還沒有提供、且無法提供的輸入法，據我們所知有：

* 嘸蝦米輸入法： http://www.liu.com.tw
* 輕鬆輸入法： http://homepage.mac.com/eshen/ez/index5.html
* 華象直覺輸入法： http://www.pictograph.com.tw/
* 晶晶碼漢字輸入法： http://input.foruto.com/jjmjsm/

=== 刪除不需要的輸入法 ===

OV所使用的輸入法檔案，都位在系統硬碟中的「資源庫」→「OpenVanilla」→「版本號碼」目錄下。在這個目錄中，您可以看到許多副檔名是.dylib的檔案，這些是各個輸入法所使用的動態執行檔案，如果您覺得有些輸入法實在用不著，您可以刪除這些檔案（在您刪除檔案之前，建議您先在系統偏好設定中的「國際設定」，暫時停用OV）。

其中，OVIMArray是行列輸入法、OVIMCanjei是倉頡、OVIMChewing是酷音、OVIMPhonetic是注音、OVIMPOJ是台語白話字輸入法、OCIMXcin則是可以載入各種Xcin輸入法表格的通用輸入法模組。

=== 編輯 cin 輸入法表格 ===

每個輸入法需要的檔案，都位在同名的目錄下。比方說，選單上的「OV行列輸入法」的表格，就是在OVIMArray下的array30.cin，POJ的表格是OVIMPOJ下的poj.cin，而您會修改、新增的檔案，通常便位在OVIMXcin下，Xcin模組使用的cin檔案名稱與輸入法對應列表，請參見前章「進階設定」。

您可以使用任何可以一套編輯純文字檔案的編輯軟體，修改輸入法表格，輸入法表格的副檔名必須是「.cin」，在存檔的時候，也必須使用UTF-8編碼存檔，MacOSX內建的「文字編輯」（TextEdit）就是一套可以編輯純文字檔案，以及轉換編碼的編輯軟體。在一個.cin檔案中，應該要包含以下資訊。

以漁村輸入法為例，在檔案的開頭需要有：

 %gen_inp
 %ename EHQ-Symbols
 %cname 漁村符號
 %encoding UTF-8
 %selkey 1234567890

其中：

* %gen_inp：所有的 .cin 檔案，都必須以此開頭。
* %ename：輸入法的英文名稱。
* %cname：輸入法的中文名稱。
* %encoding：輸入法檔案的編碼方式，請不要修改這一行的內容。
* %selkey：選字按鍵的設定，也就是當您輸入的按鍵可以產生多種結果的時候，您想要使用怎樣的按鍵選擇在選字視窗中出現的選項。上面的範例是使用 1 到 0 的數字鍵當成選字按鍵，您也可以改成用「qwer⋯」按鍵選字。

接下來必須要有 %keyname begin 與 %keyname end。在這兩個標籤的內容中定義的是輸入時所使用的按鍵，還有按下的時候應該先產生怎樣的結果，按鍵名稱與顯示名稱中間隔一個空白，每個按鍵的設定寫成一行。比方說，在倉頡輸入法的設定中，就是「q 手」、「a 日」，標準鍵盤配置的注音輸入法就是「1 ㄅ」、「q ㄆ」等。

在設定完按鍵之後，就是設定每一個按鍵組合所應該產生的結果了，這些設定放在 %chardef begin 與 %chardef end 之間，前面設定的是您在前面 %keyname 所設定的按鍵定義的組合，空一個空格後，是產生的結果。比方說，您可以在注音輸入法當中加入自己創建的新字，想要用「ㄅㄧㄤˋ」打出「棒」這個字，就是多加一行「1u;4 棒」。此外，在 %keyname 與 %chardef 所定義的英文按鍵，是沒有區分大小寫的。

在cin檔案中還有一項 %endkey 選項，因為可以應用的範圍比較複雜，將會在下一節中詳述。

=== 自訂標點符號 ===

不同的輸入法，對於如何便捷地輸入全型標點符號，總是有不同的作法；更有甚者，同一種輸入法，也會有好幾種不同的習慣。有人希望按下英文的標點符號之後就自動轉成中文全型標點，有人喜歡按shift+英文標點再變成全型標點，有人偏好使用「`」之類的前導字元，有人習慣按組合鍵等等。

由於每種輸入法拿來組字的字根對應到英文鍵盤的位置範圍不盡相同，標點符號的處理就應該自行定義，最好能提供使用者選擇的自由。基於這樣的原則，OV的Xcin模組只能在能力所及的情況下，透過cin檔的規則來完成這個任務。

%endkey這個欄位的用途是列舉輸入法字根中會觸發組字事件的字元。舉例來說，注音的聲調符號通常該出現在每個注音序列的最後，表示這串注音已經打完，要重組為一個中文字。因此，在使用標準鍵盤對應的情況下，注音的 cin 檔裡應該有這麼一行：

%endkey 3467

3467 分別是注音標準鍵盤對應裡的三聲、四聲、二聲與輕聲。這個欄位可以有效幫助我們自訂標點符號的輸入方式。以使用倉頡輸入法為例，首先，如果喜歡用「shift+英文標點」這種方式來輸入全型標點，就應該把這些「shift+英文標點」加進cin檔的%keyname及%chardef：

 %keyname begin
 < ，
 > 。
 ? ？
 : ：
 " 、
 { 「
 } 」
 | ｜
 ~ ～
 ! ！
 @ ＠
 # ＃
 $ ＄
 % ％
 ^ ︿
 & ＆
 * ＊
 ( （
 ) ）
 _ －
 + ＋
 ...(以下是倉頡本來的字根，別把這行也抄進去啊！)
 %keyname end
 %chardef begin
 < ，
 > 。
 ? ？
 : ：
 : ；
 " 、
 " ”
 " ’
 " ‘
 { 「
 { 『
 { 《
 { 〈
 { 〔
 } 」
 } 』
 } 》
 } 〉
 } 〕
 } ｝
 | ｜
 | ＼
 ~ ～
 ! ！
 @ ＠
 # ＃
 $ ＄
 % ％
 ^ ︿
 & ＆
 * ＊
 ( （
 ) ）
 _ －
 _ ＿
 _ ─
 _ –
 _ —
 + ＋
 + ＝
 ...(同樣，以下是倉頡本來的字根對應)
 %chardef end

上面的例子，在%keyname裡加入了會用來輸入標點符號的英文鍵位，並在%chardef裡加入了可能會用到的全型標點符號與字根對應的狀況。像是「<」(相當於shift+,)只會對應到「，」，但「:」(相當於shift+;)就會對應到「：」或「；」。當cj.cin加入了這些資訊之後，「shift+英文標點」就可以用來輸入全型標點了。

做了以上修改後，由於倉頡的組字事件通常由空白鍵來觸發，每次打標點符號時，也得多按一個空白鍵才能讓倉頡輸入全形符號。這時候 %endkey 就派上用場了，因為%endkey的用途是「列舉輸入法字根中會觸發組字事件的字元」，而輸入全形符號的狀況就是，如果有一種字的字根只有一個，打了之後就代表要組字。因此，在 cj.cin 裡再加上這一行：

%endkey <>?:"{}|~!@#$%^&*()_+
 

== 使用授權 ==

本軟體為開放源碼 (open source) 軟體，採用 Artistic License 釋出。相關權利義務，請參閱授權條款原文。

== 程式原始碼 ==

您可以使用svk或svn，取得最新版本的OV原始程式碼。OV的原始碼位在：

http://svn.openfoundry.org/openvanilla

如果您不熟悉svn這樣的版本管理系統，您不妨參閱附錄中的「自行編譯 OpenVanilla 部份」。又，如果您需要酷音輸入法的原始程式，您需要：

* libchewing： https://svn.csie.net/chewing/libchewing
* libchewingpp： https://svn.csie.net/chewing/libchewingpp
* charchew： https://opensvn.csie.org/SpaceChewingOSX/branches/carchew

以上酷音輸入法的程式碼，也是透過svn或svk方式取得。

== 線上相關文件以及聯絡方式 ==

目前OV的各種說明文件以及相關進度，都是在Wiki上進行、發佈，您可以在以下網址，取得各項說明文件：

http://openvanilla.org/

而如果您發現OV有任何問題，或任何建議，希望能夠有怎樣的改進，您也可以使用前述「自由軟體鑄造場」的RT（RequestTracker）回報系統反應。

而在您回報錯誤時，希望您可以盡可能描述您所遇到的狀況，例如您在那個應用程式中、使用那一套輸入法、輸入了怎樣的內容而造成問題，而如果 OV 造成應用軟體當機，OSX會提供應用程式當掉時的錯誤訊息，詢問您是否要當機紀錄回報給蘋果，我們也希望您能夠保留這份紀錄，提供給我們參考。

如果您熟悉使用IRC網路聊天室的話，您也可以在IRC上找到OV的發展者，我們經常會出沒在irc.seed.net.tw的「#osxchat」頻道裡。而各項最新的消息，也會發表在「#osxchat」頻道的專屬網誌：

http://osxchat.blogspot.com/

== 附錄 ==

=== OpenVanilla 計畫的背景 ===

關於 OpenVanilla 計畫的背景，在 #osxchat blog上的幾篇文章，我們有相當詳盡的說明。

==== OpenVanilla：新的輸入法開發架構 ====

* http://osxchat.blogspot.com/2004/10/openvanilla.html
* 10/24/2004
* zonble

lukhnos在完成了香草輸入法0.64版之後，接下來所進行的工作，先是進行了CarbonInputMethod 計畫，CarbonInputMethod 計畫是目前的 OpenVanilla 最早的雛型。

CarbonInputMethod 的內容是重新整理蘋果發展者網站（Apple Developer Connection）所提供的輸入法設計範例—BIM（ BasicInputMethod ），原因是目前各種在OSX平台上可以看到的、開放原始碼的輸入法如香草輸入法、SpaceChewing酷音輸入法，以及日文輸入法MacUIM等等，都是使用BIM為基礎開發。而BIM的寫作本身有些混亂，且本身帶有許多OS9殘留的痕跡，多使用比較老舊的API，但其實蘋果提供了許多新的API可以使用，lukhnos的目標，首先是整理出一份精簡的、簡潔的、而且比較符合新的環境的輸入法設計範例。

在整理 CarbonInputMethod 到了一個程度之後，lukhnos則在原有的基礎上，進行OpenVanilla 計畫。 OpenVanilla 的目的是，成為一個輸入法核心與 OSX 連接的通用介面，包括可以動態載入 Dynamic Library（.dylib）檔案，將各種輸入法以dylib方式載入，以及所有輸入法的共通介面，如選字視窗、按鍵處理、資料的傳入與送出等等。

之後，程式設計者如果想要在OSX上開發輸入法，如果是透過 OpenVanilla 框架，就只要將輸入法核心寫成符合一定規範的dylib檔案即可。設計者不用將心力放在處理OSX的介面問題上，只需要專心在輸入法本身，也就是，在之前有許多個別的輸入法計畫，都必須自己處理許多 Carbon API 方面的問題，而 OpenVanilla 就是負責將 Carbon API 的問題處理完成，並且將這些之前的計畫，納入在一個簡單的框架之下。

比方說，未來在 OSX 上的酷音輸入法，也不用成為獨立的分支，而可以將「新酷音」（Qooing）計畫中，抽離原本酷音輸入而獨立的 libchewing，直接應用在 OSX 平台上，而不用像之前 SpaceChewing 計畫那樣，在0.6到0.7版之間，處理那麼多 Carbon API 方面的問題（當然，那時候的常識，也累積了現在的許多經驗，以及對於OSX程式設計環境的熟悉）。可以讓 SpaceChewing 與新酷音共同維護一個輸入法核心即可，避免過去開發人力分散的狀況，在今天下午，gugod 就已經順利的將 OpenVanilla 與 libchewing 連接成功了。

在使用者介面方面，OpenVanilla 會是在OSX系統偏好設定當中的一種輸入法。如果您還是想要將輸入法寫成 component 的 bundle 的話，那麼，CarbonInputMethod 也可以給您相當大的幫助。

在此之前，#osxchat頻道的朋友曾經發起一個類似的計畫：XCINIX，企圖將xcin改寫成OSX的component，將xcin下的各種輸入法移植到OSX平台上，OpenVanilla 也是在做一件類似的事情，不過，採取的是比較不一樣的方法。而現在看起來，OpenVanilla 所採用的方式，似乎更好。

==== OpenVanilla插曲 ====
* http://osxchat.blogspot.com/2004/11/openvanilla.html
* 11/15/2004
* lukhnos

嗯，其實對我來說，繼續開發 OpenVanilla ，完成大易模組只是目的之一。

最初在釋出「香草注音」和「香草倉頡」後，Autrijus 問我：那大易有沒有可能做？我知道他是重度大易使用者，同樣也用三鍵，但是他喜歡用'[]等選字鍵，他自己在 FreeBSD 上的dayi3.cin 也是配合自己需要 patch 過的。

如果當時照「香草倉頡」的模式，弄一套大易輸入法的模組，然後很努力地（意思是不管會把原始碼搞得多亂）再多塞一個輸入法到香草裡，技術上絕對是做得到的。

但是這樣做就太不漂亮了。

本來，我就一直想找時間，把 Apple 的 BasicInputMethod/Textservice 弄熟一點，然後「香草」到了0.06版時，已經有某一個單一模組，長成了1311行的大怪物（ vanillaeventhandler.cpp ）。這樣的code要人閱讀，簡直是不可能的。

我是這樣覺得，所謂 opensource ，就是程式要有自己的生命。每個人可以從程式碼中改出自己想要的功能，甚至另起爐灶玩一局新的。我自己是這個模式的受益者，如果沒有「酷音」的公開原始碼、xcin的開放資料、Apple 的不要錢的 Xcode 跟 BasicInputMethod ，我根本不可能解決我的「特殊」需要（使用倚天排列的傳統注音輸入法）。那麼，我說不定老早就把花了很多錢買來的 PowerBook 賣掉了。

既然要做新版，就應該從已經學到的經驗出發，重新設計一套新的架構。理想上，是希望能設計出一套簡單、清楚，可以讓更多人參與的框架。OpenVanilla 就是這樣，和b6s,gugod,autrijus 經過許多討論，漸漸形成的架構。然後某一天，和gugod,zonble碰頭，一邊聊天一邊寫code，突然發現 OpenVanilla 的幾個重要模組，差不多已經完成了。我在想，「好吧，那來寫個輸入法模組測試一下，看看這個架構是不是真的可行。」寫什麼輸入法模組好呢？我第一個想到的，當然還是Autrijus的需要。

（另外一方面，gugod 也動作超快，同時開始了「酷音」核心程式庫的 C++ 化工作，「 OV 酷音」幾乎與「OV大易」同時推出測試版本，這也都強化了我們對 OV 架構的信心。）

但是就像我說的，這個因為偷懶而用了 Cocoa/Objective-C++、在晚上一邊喝茶一邊寫出來的「大易模組」，其實是個泛用的 xcin.cin 解譯器。我們試過了倉頡、行列（當然還有某個很重要的輸入法），發現功能上大致齊備──當然，套用 gugod 的說法「90%的code寫完時，表示還有 90% 的工作待完成」。但這的確證實了 OpenVanilla 的架構是可行的，也開始實現了最早設計 OV 的初衷：讓寫輸入法的人能輕鬆撰寫輸入法模組，而完全不用在乎OSX（或任何作業系統、UI）相關的細節。簡單、清楚、無平台相依性、只要有基礎的 C++ 能力就可以參與──這一直是我希望做到的。雖然在實作上一定會有要克服的地方，而任何架構一旦長大，元件數量也會迅速擴張，但這個 bottomline 是我一直希望堅持住的。

當然，自己生的孩子，怎麼看都順眼。然而輸入法畢竟是大家每天要用的東西，輸入法使用者的切身經驗才是最重要的。我從觀察「酷音」的修訂歷程，以及我自己自「香草倉頡」推出後所陸續接到的回應，才發現原來還有那麼多細節是我沒注要的地方，那麼多不同的使用經驗和需求。

而這其實也是我蠻希望 OpenVanilla 能早日成熟，並且有完整的文件說明的原因：我覺得，像輸入法這麼個人化、這麼切身的東西，還是應該要能提出一套開放、易於自訂、易於修改、易於「量身訂作」的架構，好讓「輸入法」能配合使用者的需要，而不是讓使用者配合「輸入法」來改變習慣。

所以，「大易模組」測試版的釋出只是開始的開始。後面還有很多很多細節的工作要做，要追上。能夠真的做到什麼，我還不知道。但過程當中學到很多東西，是貨真價實的。而且，跟大家一起工作、討論、搞笑、吐苦水的感覺也挺好。

繼續努力。

=== 漁村輸入法的淵源 ===

(by zonble)

1999年七月時，「漁村輸入法」在金門防衛司令部戰鬥工兵營營部暨營部連漁村營區誕生，由一群文書兵因為業務需要，而共同完成。

當時，所有的政府機構、包括國軍各部隊，全部改用所謂的「新公文格式」，在國防部所頒發的「國軍新公文格式」規定中，所有的公文一律改用 Microsoft Word 繕造，並且規定了許多並不方便視窗作業環境中文輸入的體例，例如，在中文直走文的狀況下，所有的次項目的數字標題，都必須使用像「⒉」這樣的體例（不是將「2」以及「.」兩個英文半型字元連在一起，而是必須要輸入一個有一點的2），另外還有像⑵之類的括弧文字。—這些特殊文字，必須要安裝如「中國海字集」等外掛字集，才能夠輸入，相當麻煩，許多單位並沒有完全遵守「國軍新公文格式」的規範，但是，當時工兵營的新任營長，卻對這樣的公文體例細節，百般要求。

視窗作業系統中並沒有一套適合快速輸入「中國海字集」符號的輸入方式，因此，當時一群文書兵就在營部辦公室，使用 Windows 內建的自訂輸入法產生工具，製作一套好記的、方便輸入「中國海字集」符號的輸入法，「漁村輸入法」於焉誕生，名稱來自於工兵營駐地名稱。這套輸入法最早也叫做「漁光」輸入法，意思是「漁村之光」，也稱「豬頭輸入法」，因為這套輸入法誕生的原因，實在是因為國軍的長官所制定的規定，實在是非常豬頭。

而前兩天有朋友覺得，在 MacOS X 環境底下輸入特殊符號並不方便，看了一下，MacOS X 環境當中，的確沒有一套拿來方便輸入各種符號的輸入法，而系統內建的「字元面板」一方面不見得方便，二方面似乎很容易當掉，製作一個專門用來輸入符號的輸入法，似乎是一種不錯的選擇，所以使用過去製作「漁村輸入法」的邏輯，製作了「漁村輸入法X」。

=== 自行編譯 OpenVanilla ===

除了使用 OpenVanilla 所提供的安裝套件安裝外，您也可以使用原始碼編譯安裝，而如果您有程式設計的基礎，您也可以自行直接修改 OV 的原始程式，符合您的需要。

首先，您需要安裝蘋果所提供的程式開發工具 Xcode （http://www.apple.com/macosx/features/xcode/），您才能夠在MacOS X上編譯程式，如果您使用 MacOS X 10.3 Panther的話，Xcode會附在一同出貨的「軟體重新安裝」（Software Restore）光碟中，要不然，您需要成為蘋果開發者網站（Apple Developer Connection，http://developer.apple.com/）的會員，便可以從網路上下載 Xcode。然後，請從OpenVanilla 的 subversion 檔案庫取回最新的程式原始碼。

最簡單取得 OV 原始程式碼的方法，是利用 MacOS X 的功能將網路硬碟掛上您的桌面，您只要用 Finder 的「前往」（Go）選單，選擇 「連接伺服器」（Connect to Server...） 、在「伺服器位置」（Server Address:）欄位填入：

 http://svn.openfoundry.org/openvanilla 

然後按「連接」（Connect），這時候就能夠在桌面上看到 openvanilla 硬碟圖示，Finder 還會自動打開它，這時候只要把 trunk 檔案夾拖曳到您要的地方（拖曳的時候圖示的右下應該會有綠色的十字圖樣表示拷貝動作）。動作完成後，您只需要把這個網路硬碟拖到垃圾桶上就可以終止連線。

若您想使用 wget，請把下面那行貼進終端機執行：

 wget -r -nH --cut-dir=2 -P ~/ov http://svn.openfoundry.org/openvanilla/trunk

這樣會把最新的檔案庫抓到您個人目錄下的 ov 目錄裡。

若您想使用 SVK，請參閱「如何透過 SVK 取得 Open Vanilla 的源碼」。

要事先說明的是，所謂「最新版」通常會放在檔案庫的 trunk 目錄下，接下來提到的源碼所在位置就是從這裡算起，因此要是您的路徑和這裡寫的不太一致，那表示您當時取出遠端檔案庫的方式和這裡的範例不同，如需更詳細的說明，請參考「SVK 指南」。

接下來，若您完全沒裝過 OpenVanilla，請打開終端機，進到源碼所在的根目錄下，編譯 OpenVanilla 輸入法框架。假設源碼所在的目錄是您個人目錄下的 "ov"：

 cd ~/ov ; sudo make all install clean

使用 sudo 這個指令時通常需要密碼，此時請輸入您個人的密碼即可。

再來，請到 Loaders 目錄下編譯 OpenVanilla 的 Mac OS X 版輸入法載入器：

 cd ~/ov/Loaders/OSX ; sudo make all install clean

如果您之前已經裝過 OpenVanilla，那麼您通常只需要更新自己常用的輸入法模組即可。以 Xcin 輸入法模組為例：

cd ~/ov/InputMethod/OVIMXcin ; sudo make all install clean

最後，為了讓更新完全生效，請重新登入。若只是更新了某種輸入法模組，當您開啟一個新的應用程式時，輸入法載入器就會載入您已編譯成功的新版輸入法模組，然而在此之前已經開啟的應用程式中，仍會使用舊的輸入法模組；倘若您還更新了輸入法載入器或甚至是 OpenVanilla 輸入法框架，就非得重新登入不可了。

=== 透過 SVK 取得 OpenVanilla 的程式原始碼 ===

雖然使用上述方式，您便可以取得 OpenVanilla 的原始碼，但是我們還是建議您使用 svk 等版本管理工具，這樣當我們做了任何的更新，您都可以只要下一個指令，就能夠與檔案庫中最新的更新狀況同步。svk 提供在 MacOS X 上安裝的 dmg 檔案，只要點選安裝套件（Installer Package），便可以快速完成安裝。您可以從

http://rt.openfoundry.org/Foundry/Project/Download/?Queue=82

取得svk。安裝完成後請在終端機內輸入：

 svk depotmap --init

這會問你要不要建立 depot，打 y，接著輸入：

 svk cp http://svn.openfoundry.org/openvanilla/trunk ov

第一個問題按 enter 跳過，表示要映射所有 http://svn.openfoundry.org/openvanilla/trunk 裡的東西。

第二個問題打 ov，表示把映射內容存到自己機器上 svn 資料庫裡的 //mirror/ov 的目錄裡。

第三個問題打 a，表示要映射從古至今所有的版本。

然後會需要等一陣子，svk會取得 OV 的所有版本紀錄，存放在您本機的硬碟上。等全部 copy 完後, 又會問你一個問題，要把東西 copy 到哪去，這時你還是可以打 ov，只是這個 ov 跟前個 ov 「不」一樣，這個 ov 會把東西複製到 //ov 而不是 //mirror/ov。

然後會跑進某編輯器（通常是 vi 啦），隨便打幾個字吧，像「I learn svk now!」或「clkao is great!」或「svk++ ; ov++」都行...

接著存檔（ESC :wq!）。

現在你什麼都有了，在一個叫 ov 的目錄下，通常這個目錄會在你的個人目錄裡（/User/yourname），裡面的源碼就是最新版本了。

以後要更新，在 ov 目錄下打 svk pull 即可。

=== 使用 svn 取得 OpenVanilla 原始程式碼 ===

使用 svn 取得 OV 原始程式碼的方法是，在終端機中下以下指令：

 svn co http://svn.openfoundry.org/openvanilla/trunk

基本上我們比較不鼓勵使用 svn，而建議您使用 svk。原因是在 svn會在檔案庫的每個目錄下，分別建立一個「.svn」目錄，記錄版本紀錄，如果這個目錄被刪除，就會造成 svn 無法運作。而 MacOS X 的文件格式常常使用目錄 bundle，而各種應用程式在修改目錄 bundle 形式的文件的時候，往往會刪除 .svn  目錄而造成困擾。

您可以使用 fink 或 dports 安裝 svn，而，如果您安裝了 svk，其實裡頭就已經內建了一份 svn。

=== 編譯酷音輸入法 ===

編譯酷音輸入法的方式會比較複雜一些，因為目前OV 酷音輸入法是與「新酷音」的開發團隊共同開發，所以程式碼分散在兩個不同團隊的檔案庫中。

如果您要自行編譯酷音輸入法，您首先需要libchewing，您可以從新酷音專案網站上下載 libchewing，網址是：

 http://chewing.csie.net/download.html

例如，如果您想要安裝 libchewing 0.2.5 版的話，那麼，就是下載 http://chewing.csie.net/download/libchewing/libchewing-0.2.5.tar.gz 這個檔案。如果您用 Safari 下載，在下載完成的時候，就會自動解開壓縮，並且在您的桌面上，建立一個叫做 libchewing-0.2.5 的目錄。

然後，請打開終端機，下以下的指令：

 cd ~/Desktop/libchewing-0.2.5/
 ./configure
 make
 sudo make install

接下來您需要安裝 libchewingpp，這個一個使用 C++ 語言連接 libchewing 的 wrapper。您可以使用 svk、svn或 wget 等工具，從以下網址取得 libchewingcpp：

https://svn.csie.net/chewing/libchewingpp/trunk/

使用這些工具抓取程式碼的方法，與前面「自行編譯 OpenVanilla」中所提到，抓取 OV 程式碼的方法是相同的。然後，請在 libchewing 目錄下使用 make; make test 安裝。

最後，我們需要能夠讓 OV 可以透過 libchewingcpp ，進一步連到到 libchewing，就必須要安裝carchew（carchew也就是Carbon Chewing的縮寫），carchew可以從這裡取得：

https://opensvn.csie.org/SpaceChewingOSX/branches/carchew

安裝方法也是 make; make install。

最後要注意的一點是，您必須要手動建立 OV 酷音的字典檔目錄，並且將字典檔複製過去。libhcewing會將字典檔案安裝在 /usr/share/chewing 或 /usr/local/share/chewing 下，請先在終端機下：

 sudo mkdir -p /Library/OpenVanilla/版本號/OVIMChewing

然後將字典檔複製過去：

 cp -r /usr/local/share/chewing/* /Library/OpenVanilla/版本號/OVIMChewing/

或

 cp -r /usr/share/chewing/* /Library/OpenVanilla/版本號/OVIMChewing/

=== 特別感謝 ===

* 自由軟體鑄造場（ http://openfoundry.org/ ）
* 藝立協（ http://elixus.org ）提供網頁空間
* 老地方冰果室（ http://www.frostyplace.com/ ）、OIKOS生活網（ http://www.oikos.com.tw/ ）對於 OV 的相關報導。
* 新酷音發展計畫（ http://chewing.csie.net/news.html ）共同發展各平台的酷音輸入法。
* 行列科技（ http://www.array.com.tw/ ）提供完整的行列輸入法表格。
