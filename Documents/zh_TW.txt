OpenVanilla 輸入法框架
http://openvanilla.org/

= 使用說明（撰寫中）=

2004 © Lukhnos、劉康民、姜天戩、陳柏中、楊維中

== 簡介 ==

OpenVanilla（簡稱 OV）是一套免費的、開放原始碼的、針對 MacOS X 平台設計，可以動態載入各種輸入法的中文輸入法架構（Framework）。OV 本身並不是一個輸入法，而是一個負責載入各種輸入法資源的載入程式，擔任各種輸入法與作業系統之間的橋樑。透過 OV，您可以使用倉頡、簡易、行列、注音，以及不需要手動選字的酷音輸入法，您也可以刪除不需要的輸入法，得到一份清爽的輸入法選單。

在 OV 當中，您更可以獲得更多在中文輸入的自由。OV 支援 Xcin（一套普遍應用在 Linux FreeBSD 等作業系統的視窗環境 X window 下的中文輸入介面）格式的輸入法表格— cin 檔案，透過 cin 檔案，您可以完全修改原本的輸入法設定，包括重新設定按鍵定義、新增文字或詞彙，甚至，您可以發明一套屬於您自己的輸入法。

OV 與蘋果內建的中文輸入法 TCIM（Traditional Chinese Input Method），或其他在麥金塔平台上的輸入法差別，在於改善了程式的效能，而沒有像 TCIM 在第一次啟動時，需要花上許多時間載入的問題。更重要的是，OV 是一個開放原始碼的自由軟體專案，除了是累積了過去「酷音輸入法 酷音輸入法」與「香草輸入法」開放原始碼開發經驗的成果，任何願意繼續讓 OV 更好的朋友，都能夠一同參與開發，快速發現當中可能存在的問題。

== 安裝環境 ==

安裝 MacOS X 作業系統的麥金塔電腦（目前主要在 MacOS X 10.3 Panther 下開發）。

== 下載安裝 ==

您可以在 OV 官方網站的下載頁面，或是從 OV 位在中研院資訊所自由軟體鑄造場的專案頁面下載區（http://rt.openfoundry.org/Foundry/Project/Download/?Queue=209）中，取得最新版本的 OV 安裝套件，下載完成後直接點選安裝套件圖示，便開始進行安裝。

完成安裝後，OV 主程式會安裝在「/Library/Components」底下，也就是在「資源庫」底下的「Components」裡頭，您可以看到一個叫做 OVLoader.bundle 的圖示。

== 啟用 OV ==

在安裝完之後，請重新登入。然後，請在「系統偏好設定」（System Preference，位在螢幕左上角蘋果選單中）裡頭，打開「國際設定」（International）中的「輸入法選單」（Input method），在列表中，就可以看到多了一個「OV 輸入法載入器」（繁體中文語系）或是「OpenVanilla Loader」（英文語系），出現的圖示是在蘋果符號當中，寫了一個「酷」字。您也可以在螢幕左上角的輸入法選單中，直接選擇「打開國際設定⋯」。

勾選之後，就可以在螢幕右上角的「輸入法選單」上，看到 OpenVanilla 圖示。您只要在輸入法選單上，或是使用 Command 按鈕（/⌘）加上空白鍵切換輸入法（或使用 Command 按鈕加上 option 按鈕，在加上空白鍵，三個按鍵一起按之後切換各國輸入語系），就可以切換到 OV。

== 反安裝 ==

OpenVanilla 的資料會裝在以下位置：

/Library/Components/OVLoader.bundle/
/Library/OpenVanilla/
/Library/PreferencePanes/OVPrefPane.prefPane/
/Library/Frameworks/OpenVanilla.framework/
/usr/local/lib/libchewing*

== 使用方法 ==

=== 切換輸入法 ===

=== 簡繁體中文轉換 ===

=== 全形半形符號切換 ===

=== 輸入超過 Big5 範圍的文字 ===

根據您所使用的輸入法，您可以透過 OpenVanilla 輸入各種在 Unicode 所囊括的範圍當中的文字（是的，您甚至可以輸入克林貢文）。大部份的 MacOS X 的應用程式都已經支援了Unicode，不過有些軟體則不然。

就以您購買蘋果電腦時，往往會附贈的辦公套裝軟體— AppleWorks 6 來說，就只能夠支援純 Big5 環境，所以，如果當您在 AppleWorks 中輸入某些超過 Big5 的文字，您會發現輸入法會突然卡住，例如你想要打「堃」，就會突然在輸入「ㄎㄨㄣ」之後卡住而無法動彈。這主要是應用程式對不同的文字編碼的支援問題，在輸入法的部份，沒有辦法處理這樣的狀況，即使是 OSX 系統內建的中文輸入法，也有同樣的問題。目前知道有這種問題的軟體只有 AppleWorks，不過，還是希望您稍微注意。

== 設定 OV 選項 ==

== 各項輸入法相關說明 ==


=== 倉頡輸入法 ===

=== 簡易輸入法 ===

=== 注音輸入法 ===

=== 行列輸入法 ===

=== 酷音輸入法 ===

==== 選字及選詞 ====

當您在打字的時候，只要按下空白鍵、或在方向鍵上按「下」，就會在您輸入位置的下方，跳出選字視窗，在選字模式下，可以選詞與選字，然後，按下數字鍵 1 到 7（在許氏鍵盤配置下，則是用 a、s、d、f、j、k、l），就會輸入您所選擇的字或詞。

在按下空白鍵或在方向鍵上按「下」之後，切換選字的是游標所在位置的下一個字，與漢音輸入法稍有不同，漢音輸入法是選擇游標所在的前一個字。而如果系統詞庫中，有以您目前所選擇的字音開頭的詞彙，就會先出現選詞的畫面，按一下空白鍵或「上」、「下」方向鍵，就會切換選字及選詞模式。

比如說，輸入「近視」之後，將游標移動到「近視」一詞的最前面，按下空白鍵，便可看到許多選項。此時直接再按下空白鍵，便可選不同的「近」字。

在選字或或選詞的時候，如果可以選擇的選項數量超過一頁可以顯示的範圍，就會以分頁方式呈現，只要按左鍵與右鍵，便可以翻頁，翻頁到底時會循環，回到選字的第一頁畫面，在選字（或選詞視窗）上，也會出現全部頁數、您目前所在頁數、以及是否可以按下左右鍵翻頁的箭頭指示。

如以空白鍵選詞翻頁（只能往後翻）到底時，再按一下會進入選字。在選字的時候，如果按下空白鍵，就會回到選字的第一頁。此外，如果系統中有以某個字音開頭，但是字數不同的可選詞彙，比方說，當您輸入「意氣風發」時，您便可以選擇四字詞「意氣風發」以及「意氣」，系統會先跳出四字詞的選詞狀態，再按一下空白鍵或「下」，才會跳出二字詞「意氣」的選詞狀態，然後才是「意」這個字的選字狀態。

==== 切換鍵盤配置 ====

酷音輸入法支援預設鍵盤、許氏鍵盤、倚天鍵盤、倚天二十六鍵、IBM 鍵盤以及精業鍵盤等不同的鍵盤配置，您可以在 OV 的偏好設置中切換鍵盤配置。

==== 中英文混雜輸入 ====

如果在輸入的同時，按下「caps lock」按鈕，便可以在酷音輸入法環境下，輸入英文，不需要在切換到英文語系環境下，才可以輸入英文。而只要再按一下「caps lock」按鈕，就可以切換回中文輸入狀態。此外，在大多數的狀況下，只要按下 shift 以及其他按鍵，便可以輸入英文字母。

==== 手動斷詞 ====

有時候，系統自動選詞的結果，並不符合我們的期待，將一些不應該被判斷成詞彙的字的組合，當成是詞彙處理。比方說，您在輸入「計算機與打字機」之後，出現的結果卻是：

「計算 積雨 打字機」

這時候，您可以按下「積」和「雨」之間，按下「tab」按鈕，強迫「積」和「雨」之間斷開，而不要將「積雨」視作是一個詞彙，而得到正確的結果。在許氏鍵盤下，您也可以使用像自然輸入法一樣的方式，用「q」按鍵斷詞。

==== 加入自訂詞彙 ====

當您在輸入、選字的時候，系統就會自動幫您把詞庫當中原本沒有的詞彙，加入到您的自訂詞庫當中了，所以，在輸入的時候，系統會自動出現您最近輸入時常用的詞彙。

另外，您也可以手動加入新詞，在酷音輸入法中，目前支援兩種新增自訂辭典的方法，您可以自訂新增二字詞到九字詞。第一種是沿用過去在 X window 環境下的方式，方法是：1.先把游標移到要存的詞的前面，2.計算要存的詞的長度，例如三個字，3.按下 ctrl-3。

另外一種方法，則是考慮到許多慣用漢音輸入法的使用者的習慣，另外加入了漢音模式的加入自訂詞彙方式。方法是，當您在輸入文字的狀態下，按下 shift 按鈕以及左右鍵，便會出現一段底線加粗的文字範圍，這時候，只要再按下 enter 鍵，就可以將先前所選擇的範圍，加入自訂辭典檔案中，而如果按下的是其他的按鍵，就會跳出選字模式。

您自訂的詞彙，會儲存在您個人目錄下→「資源庫」→「OVIMChewing」下的「hashdat」檔案中，您可以將這個檔案，複製到其他的電腦上使用，而如果您覺得酷音輸入法執行速度太慢，也可以直接刪除這個檔案，讓系統不要讀取您的自訂辭典。—很抱歉，目前還沒有管理酷音輸入法自訂辭典的工具。

==== 特殊符號輸入 ====

當您在輸入的時候，只要按下在注音符號之外的標點符號，就可以打出全形標點符號，例如shift 加上「,」，就可以輸入「，」。在許氏鍵盤配置下，您也可以直接輸入「,」，就出現全形的「，」，輸入「.」出現全形的「。」，而按下了 shift 以及空白鍵，則可以輸入全形空白。

如果您熟悉「漢音輸入法」的使用環境，您或許會習慣按下「`」按鈕，就會出現符號表選擇清單，在酷音輸入法中，也有同樣的功能，不過叫出符號表的方法是按下 ctrl 加上「1」或是「0」。

在酷音輸入法中，您也可以同時按下 ctrl 以及 option 按鈕，然後按下「a」到「z」等按鈕，也可以輸入類似過去在倚天中文環境下的特殊符號。

而因為在 MacOS X 環境中，系統已經用掉了不少的快速鍵，許多的應用程式也設計了各種的鍵盤快速鍵，在 MacOS X 中，因為系統以及應用程式的按鍵，都會比輸入法更加的優先，所以往往造成用 ctrl 以及 option 按鍵輸入的特殊符號，因為與系統或應用程式衝突而失靈。例，按下「m」會變成輸入「enter」，按下「i」會成為在英文環境下輸入「tab」的效果，系統的終端機也經常會攔截掉這些按鍵—這是 MacOS X 的先天設計問題，難以克服。

特殊符號輸入的按鍵位置與符號對應如下：

 q┌ w┬ e┐ r□ t〈 y〉 u⋯ I無 o。 p※
 a無 s┼ d無 f【 g】 h無 j○ k— l│ ;； '：
 z└ x┴ c無 vˇ b《 n》 m無 ,， .． /？

如果您經常撰寫中文學術論文，您應該會在撰寫參考書目與註腳的時候，經常需要輸入新式的書名號，在酷音輸入法下要輸入新式書名號相當方便而且快速，您只需要記住，在鍵盤中央的地方，有三組括弧，例如，按下「b」與「n」就是「《」與「》」。

=== 白話字 POJ 輸入 ===

而Hōló POJ是一套用來輸入台語白話字的輸入法，在pc的幫忙下完成。先不管什麼政治上的問題，目前在各種作業系統中，要輸入羅馬拼音的台語符號字，以白話字進行寫作，都缺少一套方便的輸入法。以下內容取自於POJ輸入法的說明文件：

目前POJ輸入法的功能如下：

•打羅馬字母和聲符，可以出現配上調號的音節，例如打 chan2 會出現 chán, 打 peh8 會出現 pe̍h 等等
•打 q 和 ou 都會出現 o·
•配合0.04版OpenVanilla SimpleLoader新加入的「輸入法選項」功能，若是「改用ASCII輸出」選項的值設為1，則POJ輸入法不會產生Unicode輸出，而是直接出ASCII字母，例如打 chan2 就出現 chan2 ，適合在沒有Unicode支援的環境使用。目前這個功能用途不大，但若以後能加入選字（打POJ出漢字），則有其實用價值

已知問題如下：

•在 Microsoft Word 打出有聲調的符號，會配上錯誤的字型（例如原先使用Times New Roman，打出調號字母後，字型卻會變成新細明體），造成打出來的音節很不雅觀。
•目前尚無POJ的音節的「文法檢查」，例如 h, k, p, t 字尾的音節，僅可能有四聲與八聲兩種可能，目前則無此種檢查。此外，在資料結構內部，仍可能出現 chan1 或 peh4 等多餘的資料（一聲不用加 1，四聲不用加 4），這需要額外撰寫函式來做正規化（normailization）的動作。

=== 白話字漢羅輸入 ===

=== 英數輸入法 ===

英數輸入法就是直接送出您所打的英文字母或數字，您可以配合「全形英數字」選項使用，快速輸入全形的英數字。

=== 藏文輸入法（Sambhota 鍵盤） ===

OV所提供的藏文輸入法為 Sambhota 鍵盤配置，可以直接在大多數 MacOS X 應用程式中，輸入 Unicode 當中的藏文，而因為在 MacOS X 中內建的簡體中文就有納入藏文的字集，所以，如果您有安裝中文的套件（相信您應該會裝），在顯示藏文方面，應該沒有問題。

您可以從以下的 RTF 文件，取得關於 Sambhota 鍵盤的額外說明：
http://iris.lib.virginia.edu/tibet/tools/jskad_docs/Sambhota_keymap_one.rtf

這份文件必須使用 JSKAD 這個使用 Java 寫成的編輯器開啟：
http://iris.lib.virginia.edu/tibet/tools/jskad.html

Sambhota 鍵盤配置如下：

==== 子音 ====

ཀ་k ཁ་K ག་g ང་G ཅ་c ཅ་C
ཇ་j ཉ་N ཏ་t ཐ་T ད་d ན་n
པ་p ཕ་P བ་b མ་m ཙ་x ཚ་X
དྷ་D ཝ་w ཞ་Z ཟ་z འ་' ཡ་y
ར་r ལ་l ཤ་S ས་s ཧ་h ཨ་A

==== 梵文子音 ====

ཊ་q ཋ་Q ཌ་v ཎ་V བྷ་B

==== 組合字 ====

སྒྲ་fsgr ལྷ་flh ཀྰ་fk'

==== 梵文組合字 ====

ཀྲྱ་fkry ཁྑ་fkk

==== 母音 ====

ཨི་Ai
ཀ་k或ka ཀི་ki ཀུ་ku ཀོ་ko
ཀེ་ke ཀཻ་kE ཀཽ་kO ཀྀ་KI

==== 標點 ====

།་, ་空白鍵 [空白].
ཿ་: ༔་; ྅་@ ༼་( ༽་)
༑་-
ཨྃ་A& ཨོཾ་Ao& ཨིཾ་Ai& ཨཽཾ་AO&
ཀྂ་k% ཧྰུྂ་fh'u%

==== 數字 ====

༡་ 1 ༢་2 ༣་ 3 ༤་ 4 ༥་5
༦་6 ༧་7 ༨་8 ༩་9 ༠་0

=== Unicode Hex 輸入法 ===

Unicode Hex  輸入法的用途，近似於過去各種以 Big5 編碼為基礎的中文系統的內碼輸入法；在輸入了Unicode Hex 碼之後，這個輸入法就會輸出對應的 Unicode 字碼。Unicode Hex 輸入法在平常使用上或許用處不大，不過，如果您需要輸入某個特殊的、其他輸入法都無法打出的文字，而您又知道這個文字在 Unicode 當中的位置，Unicode Hex 便可以派上用場。

又，如果您有輸入在 Big5 之外，常見中文輸入法都無法處理的的特殊符號需求，或許可以試試看漁村符號輸入法（請參見 Xcin 輸入法模組部份）。

=== EZBasic 輸入法 ===

EZBasic 輸入法是一套在輸入法環境下的 BASIC 語言直譯器。就某種角度來說，EZBasic 並不算是一套輸入法，因為 EZBasic 不在處理各種語文方面的問題，而是我們為了擴大對於「輸入法可以做什麼」的想像所設計。

當我們還原輸入法最基本的原理，或是我們試圖給輸入法一個最基本的定義的時候，所謂的輸入法，就是將一連串的鍵盤按鍵，解譯、轉換成另外一種結果，或是，在某種狀況之下，電腦可以給與一段文字回應；其實所謂的輸入法不應該稱為是輸入法，而是「輸出法」，重點在當你輸入了什麼東西之後，電腦會「輸出」什麼。

您可以在 EZBasic 輸入法下，直接鍵入一行可以完成的 Basic 程式語言，按下送出按鍵 enter 之後，就會將這一行程式的執行結果送出。比方說，您可以輸入「PRINT 1+2」，就可以得到結果「3」，您也可以輸入迴圈如「FOR I = 1 TO 10: PRINT *: NEXT」，就會一次輸入十個「*」星號了。也就是，如果您在輸入文字的過程中，需要一些簡單的四則運算，而您又稍微了解一些 BASIC 語言，那麼，您不需要另外啟動計算機程式，在輸入法中完成運算。

另外，您也可以使用 system 語法，直接下 unix 系統指令，例如 system "ls" 。

=== Xcin 輸入法模組 ===

==== 漁村符號輸入法 ====

漁村符號是一套好記，以符號外觀對應的鍵盤按鍵設計為原則，設計用來快速輸入各種在Unicode 當中特殊符號的輸入法，這套輸入法的淵源與背景請參考附錄。簡單來說，透過漁村，您可以輸入的符號包括：

# 各種特殊的英文與數字符號，只要直接輸入單一的英文字母或數字即可。例如打「a」可以產生「⒜」、「ⓐ」、「ⓐ」，打「1」就會出現「①」、「⑴」、「⒈」等；因為unicode 符號的限制，數字最多可以到 50。
# 各種圓形、方形與三角形等符號。打出圓形符號的方法是按下句號「.」，方形是逗點「,」，三角形則是「/\」或「\/」，星形符號是「*」等。按下「<」、「<<」、「>」與「>>」，則可以輸入各種括弧或現代書名號，例如「»」。
# 可以用來輸入各種箭頭。可使用的按鍵包括「<-」（←）、「->」（→）、「<\」（↖）、「/>」（↗）、「</」（↙）、「\>」（↘）、「<->」（⇄）「<|」（↑）、「|>」（↓）等等。
# 可以輸入八卦符號，以「|」代表乾卦，以「:」代表坤卦；例如「:|:」就是「☵」。
# 音符符號。如「o/~」可以輸入「♪」。
# 輸入「pen」，可以列出所有與筆相關的符號。「mail」與「tel」也分別代表郵件與電話相關符號。
# 輸入「astro」，可以列出所有的西洋星座符號。
# 輸入「planet」，可以列出所有的西洋九大行星代表符號。
# 輸入「chess」，可以列出所有的西洋棋符號。
# 輸入「poker」，可以列出所有的橋牌符號。
# 蘋果系統符號。例如打「cmd」可以打出「⌘」、「」，打「opt」可以打出「⌥」、「⎇」。
# 其他特別符號。例如「sss」可以輸入溫泉符號「♨」，「ox」可以輸入「☠」等。

== 進階設定 ==

OV 的所有設定資訊，都存放在您的帳號目錄下的「資源庫」→「OV」→「0.6.1」目錄下的「OVLoader.plist」檔案當中。這個檔案是一個 XML（eXtensive Markup Language）格式的純文字檔案，當您在「系統偏好設定」的 OV 設定中，按下「進階設定⋯」，就會以您系統中目前預設的 XML 編輯器，修改這個設定檔案。

== 自訂選單、修改與設計自己的輸入法 ==

OV 最大的特色之一，就是能夠更方便的修改安裝包當中內建的輸入法表格，符合自己的特殊需要，比方說就原本的注音或倉頡輸入法，新增幾個自己所習慣的按鍵；也可以使用比蘋果 TCIM 所提供的輸入法編輯工具更具有彈性的方式，設計自己的輸入法。

或這麼說，許多朋友都有在 MacOS X 上找不到嘸蝦米輸入法可用的問題，OV 目前也無法直接提供嘸蝦米輸入法，原因是在嘸蝦米輸入法的所有者行易公司，對產品的政策問題。而如果您可以找到嘸蝦米輸入法的表格，並且轉換成 OV 所使用的格式，然後放到 OV 的輸入法檔案目錄中，單純就技術上來說，要實現在 OV 架構下使用嘸蝦米，是可行的；但是這樣未經行易公司授權，便逕行使用嘸蝦米輸入法，請三思您所必須負擔的責任。

=== 刪除不需要的輸入法 ===

OV所使用的輸入法檔案，都位在系統硬碟中的「資源庫」→「OpenVanilla」→「版本號碼」目錄下。在這個目錄中，您可以看到許多副檔名是 .dylib 的檔案，這些是各個輸入法所使用的動態執行檔案，如果您覺得有些輸入法實在用不著，您可以刪除這些檔案（在您刪除檔案之前，建議您先在系統偏好設定中的「國際設定」，暫時停用 OV）。

其中，OVIMArray 是行列輸入法、OVIMCanjei 是倉頡、OVIMChewing 是酷音、OVIMPhonetic 是注音、OVIMPOJ 是台語白話字輸入法、OCIMXcin 則是可以載入各種 Xcin 輸入法表格的通用輸入法模組。

=== 編輯 .cin 輸入法表格 ===

每個輸入法需要的檔案，都位在同名的目錄下。比方說，選單上的「OV 行列輸入法」的表格，就是在 OVIMArray 下的 array30.cin，POJ 的表格是 OVIMPOJ 下的 poj.cin，而您會修改、新增的檔案，通常便位在 OVIMXcin 下。

您可以使用任何可以一套編輯純文字檔案的編輯軟體，修改輸入法表格，輸入法表格的副檔名必須是「.cin」，在存檔的時候，也必須使用 UTF-8 編碼存檔，MacOS X 內建的「文字編輯」（TextEdit）就是一套可以編輯純文字檔案，以及轉換編碼的編輯軟體。在一個 .cin 檔案中，應該要包含以下資訊。

以漁村輸入法為例，在檔案的開頭需要有：

 %gen_inp
 %ename EHQ-Symbols
 %cname 漁村符號
 %encoding UTF-8
 %selkey 1234567890

其中：

* %gen_inp：所有的 .cin 檔案，都必須以此開頭。
* %ename：輸入法的英文名稱。
* %cname：輸入法的中文名稱。
* %encoding：輸入法檔案的編碼方式，請不要修改這一行的內容。
* %selkey：選字按鍵的設定，也就是當您輸入的按鍵可以產生多種結果的時候，您想要使用怎樣的按鍵選擇在選字視窗中出現的選項。上面的範例是使用 1 到 0 的數字鍵當成選字按鍵，您也可以改成用「qwer⋯」按鍵選字。

接下來必須要有 %keyname begin 與 %keyname end。在這兩個標籤的內容中定義的是輸入時所使用的按鍵，還有按下的時候應該先產生怎樣的結果，按鍵名稱與顯示名稱中間隔一個空白，每個按鍵的設定寫成一行。比方說，在倉頡輸入法的設定中，就是「q 手」、「a 日」，標準鍵盤配置的注音輸入法就是「1 ㄅ」、「q ㄆ」等。

在設定完按鍵之後，就是設定每一個按鍵組合所應該產生的結果了，這些設定放在 %chardef begin 與 %chardef end 之間，前面設定的是您在前面 %keyname 所設定的按鍵定義的組合，空一個空格後，是產生的結果。比方說，您可以在注音輸入法當中加入自己創建的新字，想要用「ㄅㄧㄤ\」打出「棒」這個字，就是多加一行「1u;4 棒」。此外，在 %keyname 與 %chardef 所定義的英文按鍵，是沒有區分大小寫的。

== 使用授權 ==

本軟體為開放源碼 (open source) 軟體，採用 Artistic License 釋出。相關權利義務，請參閱授權條款原文。

== 程式原始碼 ==

您可以使用 svk 或 svn，取得最新版本的 OV 原始程式碼，OV 的原始碼位在

http://svn.openfoundry.org/openvanilla

如果您需要酷音輸入法的原始程式，您需要：

* libchewing： https://svn.csie.net/chewing/libchewing
* libchewingpp： https://svn.csie.net/chewing/libchewingpp
* charchew： https://opensvn.csie.org/酷音輸入法OSX/branches/carchew

以上酷音輸入法的程式碼，也是透過 svn 或 svk 方式取得。

== 線上相關文件以及聯絡方式 ==

目前 OV 的各種說明文件以及相關進度，都是在 Wiki 上進行、發佈，您可以在以下網址，取得各項說明文件：

http://openvanilla.org/

而如果您發現 OV 有任何問題，或任何建議，希望能夠有怎樣的改進，您也可以使用前述「自由軟體鑄造場」的 RT（Request Tracker）回報系統反應。

而在您回報錯誤時，希望您可以盡可能描述您所遇到的狀況，例如您在那個應用程式中、使用OV輸入法輸入了怎樣的內容出現了問題，而如果酷音輸入法造成應用軟體當機，OSX會提供應用程式當掉時的錯誤訊息，詢問您是否要當機紀錄回報給蘋果，我們也希望您能夠保留這份紀錄，提供給我們參考。

如果您熟悉使用 IRC 網路聊天室的話，您也可以在 IRC 上找到 OV 的發展者，我們經常會出沒在 irc.seed.net.tw 的「#osxchat」頻道裡。而各項最新的消息，也會發表在「#osxchat」頻道的專屬網誌：

http://osxchat.blogspot.com/

== 附錄 ==

=== OpenVanilla 計畫的背景 ===

(by gugod)
lukhnos 在完成了香草輸入法 0.64 版之後，接下來所進行的工作，先是進行了 CarbonInputMethod 計畫，CarbonInputMethod 計畫是目前的 OpenVanilla 最早的雛型。

CarbonInputMethod 的內容是重新整理蘋果發展者網站（Apple Developer Connection）所提供的輸入法設計範例— BIM（Basic Input Method） ，原因是目前各種在 OSX 平台上可以看到的、開放原始碼的輸入法如香草輸入法、SpaceChewing 酷音輸入法，以及日文輸入法 MacUIM 等等，都是使用 BIM 為基礎開發。而BIM的寫作本身有些混亂，且本身帶有許多 OS9 殘留的痕跡，多使用比較老舊的 API，但其實蘋果提供了許多新的 API 可以使用，lukhnos 的目標，首先是整理出一份精簡的、簡潔的、而且比較符合新的環境的輸入法設計範例。

在整理 CarbonInputMethod 到了一個程度之後，lukhnos 則在原有的基礎上，進行 OpenVanilla 計畫。OpenVanilla 的目的是，成為一個輸入法核心與 OSX 連接的通用介面，包括可以動態載入 Dynamic Library（.dylib） 檔案，將各種輸入法以 dylib 方式載入，以及所有輸入法的共通介面，如選字視窗、按鍵處理、資料的傳入與送出等等。

之後，程式設計者如果想要在 OSX 上開發輸入法，如果是透過 OpenVanilla 框架，就只要將輸入法核心寫成符合一定規範的 dylib 檔案即可。設計者不用將心力放在處理 OSX 的介面問題上，只需要專心在輸入法本身，也就是，在之前有許多個別的輸入法計畫，都必須自己處理許多 Carbon API 方面的問題，而 OpenVanilla 就是負責將 Carbon API 的問題處理完成，並且將這些之前的計畫，納入在一個簡單的框架之下。

(by lukhnos)
嗯，其實對我來說，繼續開發 OpenVanilla，完成大易模組只是目的之一。

最初在釋出「香草注音」和「香草倉頡」後，Autrijus 問我：那大易有沒有可能做？我知道他是重度大易使用者，同樣也用三鍵，但是他喜歡用 '[] 等選字鍵，他自己在 FreeBSD 上的 dayi3.cin 也是配合自己需要 patch 過的。

如果當時照「香草倉頡」的模式，弄一套大易輸入法的模組，然後很努力地（意思是不管會把原始碼搞得多亂）再多塞一個輸入法到香草裡，技術上絕對是做得到的。

但是這樣做就太不漂亮了。

本來，我就一直想找時間，把 Apple 的 BasicInputMethod/Text service 弄熟一點，然後「香草」到了 0.06 版時，已經有某一個單一模組，長成了 1311 行的大怪物（vanillaeventhandler.cpp）。這樣的 code 要人閱讀，簡直是不可能的。

我是這樣覺得，所謂 open source，就是程式要有自己的生命。每個人可以從程式碼中改出自己想要的功能，甚至另起爐灶玩一局新的。我自己是這個模式的受益者，如果沒有「酷音」的公開原始碼、xcin 的開放資料、Apple 的不要錢的 Xcode 跟 BasicInputMethod，我根本不可能解決我的「特殊」需要（使用倚天排列的傳統注音輸入法）。那麼，我說不定老早就把花了很多錢買來的 PowerBook 賣掉了。

既然要做新版，就應該從已經學到的經驗出發，重新設計一套新的架構。理想上，是希望能設計出一套簡單、清楚，可以讓更多人參與的框架。OpenVanilla 就是這樣，和 b6s, gugod, autrijus 經過許多討論，漸漸形成的架構。然後某一天，和 gugod, zonble 碰頭，一邊聊天一邊寫 code，突然發現 OpenVanilla 的幾個重要模組，差不多已經完成了。我在想，「好吧，那來寫個輸入法模組測試一下，看看這個架構是不是真的可行。」寫什麼輸入法模組好呢？我第一個想到的，當然還是 Autrijus 的需要。

（另外一方面，gugod 也動作超快，同時開始了「酷音」核心程式庫的 C++ 化工作，「OV酷音」幾乎與「OV 大易」同時推出測試版本，這也都強化了我們對 OV 架構的信心。）

但是就像我說的，這個因為偷懶而用了 Cocoa/Objective-C++、在晚上一邊喝茶一邊寫出來的「大易模組」，其實是個泛用的 xcin .cin 解譯器。我們試過了倉頡、行列（當然還有某個很重要的輸入法），發現功能上大致齊備──當然，套用 gugod 的說法「90% 的 code寫完時，表示還有 90% 的工作待完成」。但這的確證實了 OpenVanilla 的架構是可行的，也開始實現了最早設計 OV 的初衷：讓寫輸入法的人能輕鬆撰寫輸入法模組，而完全不用在乎 OS X（或任何作業系統、UI）相關的細節。簡單、清楚、無平台相依性、只要有基礎的C++ 能力就可以參與──這一直是我希望做到的。雖然在實作上一定會有要克服的地方，而任何架構一旦長大，元件數量也會迅速擴張，但這個 bottom line 是我一直希望堅持住的。

當然，自己生的孩子，怎麼看都順眼。然而輸入法畢竟是大家每天要用的東西，輸入法使用者的切身經驗才是最重要的。我從觀察「酷音」的修訂歷程，以及我自己自「香草倉頡」推出後所陸續接到的回應，才發現原來還有那麼多細節是我沒注要的地方，那麼多不同的使用經驗和需求。

而這其實也是我蠻希望 OpenVanilla 能早日成熟，並且有完整的文件說明的原因：我覺得，像輸入法這麼個人化、這麼切身的東西，還是應該要能提出一套開放、易於自訂、易於修改、易於「量身訂作」的架構，好讓「輸入法」能配合使用者的需要，而不是讓使用者配合「輸入法」來改變習慣。

所以，「大易模組」測試版的釋出只是開始的開始。後面還有很多很多細節的工作要做，要追上。能夠真的做到什麼，我還不知道。但過程當中學到很多東西，是貨真價實的。而且，跟大家一起工作、討論、搞笑、吐苦水的感覺也挺好。

繼續努力。

=== 漁村輸入法的淵源 ===

(by zonble)
1999年七月時，「漁村輸入法」在金門防衛司令部戰鬥工兵營營部暨營部連漁村營區誕生，由一群文書兵因為業務需要，而共同完成。

當時，所有的政府機構、包括國軍各部隊，全部改用所謂的「新公文格式」，在國防部所頒發的「國軍新公文格式」規定中，所有的公文一律改用 Microsoft Word 繕造，並且規定了許多並不方便視窗作業環境中文輸入的體例，例如，在中文直走文的狀況下，所有的次項目的數字標題，都必須使用像「⒉」這樣的體例（不是將「2」以及「.」兩個英文半型字元連在一起，而是必須要輸入一個有一點的 2），另外還有像⑵之類的括弧文字。—這些特殊文字，必須要安裝如「中國海字集」等外掛字集，才能夠輸入，相當麻煩，許多單位並沒有完全遵守「國軍新公文格式」的規範，但是，當時工兵營的新任營長，卻對這樣的公文體例細節，百般要求。

視窗作業系統中並沒有一套適合快速輸入「中國海字集」符號的輸入方式，因此，當時一群文書兵就在營部辦公室，使用 Windows 內建的自訂輸入法產生工具，製作一套好記的、方便輸入「中國海字集」符號的輸入法，「漁村輸入法」於焉誕生，名稱來自於工兵營駐地名稱。這套輸入法最早也叫做「漁光」輸入法，意思是「漁村之光」，也稱「豬頭輸入法」，因為這套輸入法誕生的原因，實在是因為國軍的長官所制定的規定，實在是非常豬頭。

而前兩天有朋友覺得，在 MacOS X 環境底下輸入特殊符號並不方便，看了一下，MacOS X 環境當中，的確沒有一套拿來方便輸入各種符號的輸入法，而系統內建的「字元面板」一方面不見得方便，二方面似乎很容易當掉，製作一個專門用來輸入符號的輸入法，似乎是一種不錯的選擇，所以使用過去製作「漁村輸入法」的邏輯，製作了「漁村輸入法X」。

=== 特別感謝 ===

* 老地方冰果室（http://www.frostyplace.com/）、OIKOS生活網（http://www.oikos.com.tw/）對於 OV 的相關報導。
* 新酷音發展計畫（http://chewing.csie.net/news.html）共同發展各平台的酷音輸入法。
* 行列科技（http://www.array.com.tw/）提供完整的行列輸入法表格。
